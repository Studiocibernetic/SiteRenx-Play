
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Jogo
 * 
 */
export type Jogo = $Result.DefaultSelection<Prisma.$JogoPayload>
/**
 * Model ImagemJogo
 * 
 */
export type ImagemJogo = $Result.DefaultSelection<Prisma.$ImagemJogoPayload>
/**
 * Model Comentario
 * 
 */
export type Comentario = $Result.DefaultSelection<Prisma.$ComentarioPayload>
/**
 * Model Favorito
 * 
 */
export type Favorito = $Result.DefaultSelection<Prisma.$FavoritoPayload>
/**
 * Model MensagemChat
 * 
 */
export type MensagemChat = $Result.DefaultSelection<Prisma.$MensagemChatPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.jogo`: Exposes CRUD operations for the **Jogo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Jogos
    * const jogos = await prisma.jogo.findMany()
    * ```
    */
  get jogo(): Prisma.JogoDelegate<ExtArgs>;

  /**
   * `prisma.imagemJogo`: Exposes CRUD operations for the **ImagemJogo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ImagemJogos
    * const imagemJogos = await prisma.imagemJogo.findMany()
    * ```
    */
  get imagemJogo(): Prisma.ImagemJogoDelegate<ExtArgs>;

  /**
   * `prisma.comentario`: Exposes CRUD operations for the **Comentario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comentarios
    * const comentarios = await prisma.comentario.findMany()
    * ```
    */
  get comentario(): Prisma.ComentarioDelegate<ExtArgs>;

  /**
   * `prisma.favorito`: Exposes CRUD operations for the **Favorito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoritos
    * const favoritos = await prisma.favorito.findMany()
    * ```
    */
  get favorito(): Prisma.FavoritoDelegate<ExtArgs>;

  /**
   * `prisma.mensagemChat`: Exposes CRUD operations for the **MensagemChat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MensagemChats
    * const mensagemChats = await prisma.mensagemChat.findMany()
    * ```
    */
  get mensagemChat(): Prisma.MensagemChatDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Jogo: 'Jogo',
    ImagemJogo: 'ImagemJogo',
    Comentario: 'Comentario',
    Favorito: 'Favorito',
    MensagemChat: 'MensagemChat'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "usuario" | "jogo" | "imagemJogo" | "comentario" | "favorito" | "mensagemChat"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Jogo: {
        payload: Prisma.$JogoPayload<ExtArgs>
        fields: Prisma.JogoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JogoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JogoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>
          }
          findFirst: {
            args: Prisma.JogoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JogoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>
          }
          findMany: {
            args: Prisma.JogoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>[]
          }
          create: {
            args: Prisma.JogoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>
          }
          createMany: {
            args: Prisma.JogoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JogoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>[]
          }
          delete: {
            args: Prisma.JogoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>
          }
          update: {
            args: Prisma.JogoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>
          }
          deleteMany: {
            args: Prisma.JogoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JogoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JogoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JogoPayload>
          }
          aggregate: {
            args: Prisma.JogoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJogo>
          }
          groupBy: {
            args: Prisma.JogoGroupByArgs<ExtArgs>
            result: $Utils.Optional<JogoGroupByOutputType>[]
          }
          count: {
            args: Prisma.JogoCountArgs<ExtArgs>
            result: $Utils.Optional<JogoCountAggregateOutputType> | number
          }
        }
      }
      ImagemJogo: {
        payload: Prisma.$ImagemJogoPayload<ExtArgs>
        fields: Prisma.ImagemJogoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImagemJogoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImagemJogoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>
          }
          findFirst: {
            args: Prisma.ImagemJogoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImagemJogoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>
          }
          findMany: {
            args: Prisma.ImagemJogoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>[]
          }
          create: {
            args: Prisma.ImagemJogoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>
          }
          createMany: {
            args: Prisma.ImagemJogoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ImagemJogoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>[]
          }
          delete: {
            args: Prisma.ImagemJogoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>
          }
          update: {
            args: Prisma.ImagemJogoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>
          }
          deleteMany: {
            args: Prisma.ImagemJogoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImagemJogoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ImagemJogoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagemJogoPayload>
          }
          aggregate: {
            args: Prisma.ImagemJogoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImagemJogo>
          }
          groupBy: {
            args: Prisma.ImagemJogoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImagemJogoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImagemJogoCountArgs<ExtArgs>
            result: $Utils.Optional<ImagemJogoCountAggregateOutputType> | number
          }
        }
      }
      Comentario: {
        payload: Prisma.$ComentarioPayload<ExtArgs>
        fields: Prisma.ComentarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComentarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComentarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>
          }
          findFirst: {
            args: Prisma.ComentarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComentarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>
          }
          findMany: {
            args: Prisma.ComentarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>[]
          }
          create: {
            args: Prisma.ComentarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>
          }
          createMany: {
            args: Prisma.ComentarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComentarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>[]
          }
          delete: {
            args: Prisma.ComentarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>
          }
          update: {
            args: Prisma.ComentarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>
          }
          deleteMany: {
            args: Prisma.ComentarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComentarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ComentarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPayload>
          }
          aggregate: {
            args: Prisma.ComentarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComentario>
          }
          groupBy: {
            args: Prisma.ComentarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComentarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComentarioCountArgs<ExtArgs>
            result: $Utils.Optional<ComentarioCountAggregateOutputType> | number
          }
        }
      }
      Favorito: {
        payload: Prisma.$FavoritoPayload<ExtArgs>
        fields: Prisma.FavoritoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoritoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoritoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          findFirst: {
            args: Prisma.FavoritoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoritoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          findMany: {
            args: Prisma.FavoritoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>[]
          }
          create: {
            args: Prisma.FavoritoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          createMany: {
            args: Prisma.FavoritoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoritoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>[]
          }
          delete: {
            args: Prisma.FavoritoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          update: {
            args: Prisma.FavoritoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          deleteMany: {
            args: Prisma.FavoritoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoritoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FavoritoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritoPayload>
          }
          aggregate: {
            args: Prisma.FavoritoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorito>
          }
          groupBy: {
            args: Prisma.FavoritoGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoritoGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoritoCountArgs<ExtArgs>
            result: $Utils.Optional<FavoritoCountAggregateOutputType> | number
          }
        }
      }
      MensagemChat: {
        payload: Prisma.$MensagemChatPayload<ExtArgs>
        fields: Prisma.MensagemChatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MensagemChatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MensagemChatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>
          }
          findFirst: {
            args: Prisma.MensagemChatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MensagemChatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>
          }
          findMany: {
            args: Prisma.MensagemChatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>[]
          }
          create: {
            args: Prisma.MensagemChatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>
          }
          createMany: {
            args: Prisma.MensagemChatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MensagemChatCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>[]
          }
          delete: {
            args: Prisma.MensagemChatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>
          }
          update: {
            args: Prisma.MensagemChatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>
          }
          deleteMany: {
            args: Prisma.MensagemChatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MensagemChatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MensagemChatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensagemChatPayload>
          }
          aggregate: {
            args: Prisma.MensagemChatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMensagemChat>
          }
          groupBy: {
            args: Prisma.MensagemChatGroupByArgs<ExtArgs>
            result: $Utils.Optional<MensagemChatGroupByOutputType>[]
          }
          count: {
            args: Prisma.MensagemChatCountArgs<ExtArgs>
            result: $Utils.Optional<MensagemChatCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    comentarios: number
    favoritos: number
    mensagensChat: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentarios?: boolean | UsuarioCountOutputTypeCountComentariosArgs
    favoritos?: boolean | UsuarioCountOutputTypeCountFavoritosArgs
    mensagensChat?: boolean | UsuarioCountOutputTypeCountMensagensChatArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountComentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountMensagensChatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensagemChatWhereInput
  }


  /**
   * Count Type JogoCountOutputType
   */

  export type JogoCountOutputType = {
    imagens: number
    comentarios: number
    favoritos: number
  }

  export type JogoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imagens?: boolean | JogoCountOutputTypeCountImagensArgs
    comentarios?: boolean | JogoCountOutputTypeCountComentariosArgs
    favoritos?: boolean | JogoCountOutputTypeCountFavoritosArgs
  }

  // Custom InputTypes
  /**
   * JogoCountOutputType without action
   */
  export type JogoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JogoCountOutputType
     */
    select?: JogoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JogoCountOutputType without action
   */
  export type JogoCountOutputTypeCountImagensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagemJogoWhereInput
  }

  /**
   * JogoCountOutputType without action
   */
  export type JogoCountOutputTypeCountComentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioWhereInput
  }

  /**
   * JogoCountOutputType without action
   */
  export type JogoCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: string | null
    nome: string | null
    handle: string | null
    imagem: string | null
    ehAdmin: boolean | null
    bio: string | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: string | null
    nome: string | null
    handle: string | null
    imagem: string | null
    ehAdmin: boolean | null
    bio: string | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nome: number
    handle: number
    imagem: number
    ehAdmin: number
    bio: number
    dataCriacao: number
    dataAtualizacao: number
    _all: number
  }


  export type UsuarioMinAggregateInputType = {
    id?: true
    nome?: true
    handle?: true
    imagem?: true
    ehAdmin?: true
    bio?: true
    dataCriacao?: true
    dataAtualizacao?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nome?: true
    handle?: true
    imagem?: true
    ehAdmin?: true
    bio?: true
    dataCriacao?: true
    dataAtualizacao?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nome?: true
    handle?: true
    imagem?: true
    ehAdmin?: true
    bio?: true
    dataCriacao?: true
    dataAtualizacao?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: string
    nome: string | null
    handle: string | null
    imagem: string | null
    ehAdmin: boolean
    bio: string | null
    dataCriacao: Date
    dataAtualizacao: Date
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    handle?: boolean
    imagem?: boolean
    ehAdmin?: boolean
    bio?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
    comentarios?: boolean | Usuario$comentariosArgs<ExtArgs>
    favoritos?: boolean | Usuario$favoritosArgs<ExtArgs>
    mensagensChat?: boolean | Usuario$mensagensChatArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    handle?: boolean
    imagem?: boolean
    ehAdmin?: boolean
    bio?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nome?: boolean
    handle?: boolean
    imagem?: boolean
    ehAdmin?: boolean
    bio?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentarios?: boolean | Usuario$comentariosArgs<ExtArgs>
    favoritos?: boolean | Usuario$favoritosArgs<ExtArgs>
    mensagensChat?: boolean | Usuario$mensagensChatArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      comentarios: Prisma.$ComentarioPayload<ExtArgs>[]
      favoritos: Prisma.$FavoritoPayload<ExtArgs>[]
      mensagensChat: Prisma.$MensagemChatPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nome: string | null
      handle: string | null
      imagem: string | null
      ehAdmin: boolean
      bio: string | null
      dataCriacao: Date
      dataAtualizacao: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comentarios<T extends Usuario$comentariosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$comentariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "findMany"> | Null>
    favoritos<T extends Usuario$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany"> | Null>
    mensagensChat<T extends Usuario$mensagensChatArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$mensagensChatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'String'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly handle: FieldRef<"Usuario", 'String'>
    readonly imagem: FieldRef<"Usuario", 'String'>
    readonly ehAdmin: FieldRef<"Usuario", 'Boolean'>
    readonly bio: FieldRef<"Usuario", 'String'>
    readonly dataCriacao: FieldRef<"Usuario", 'DateTime'>
    readonly dataAtualizacao: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.comentarios
   */
  export type Usuario$comentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    where?: ComentarioWhereInput
    orderBy?: ComentarioOrderByWithRelationInput | ComentarioOrderByWithRelationInput[]
    cursor?: ComentarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * Usuario.favoritos
   */
  export type Usuario$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    cursor?: FavoritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Usuario.mensagensChat
   */
  export type Usuario$mensagensChatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    where?: MensagemChatWhereInput
    orderBy?: MensagemChatOrderByWithRelationInput | MensagemChatOrderByWithRelationInput[]
    cursor?: MensagemChatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensagemChatScalarFieldEnum | MensagemChatScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Jogo
   */

  export type AggregateJogo = {
    _count: JogoCountAggregateOutputType | null
    _avg: JogoAvgAggregateOutputType | null
    _sum: JogoSumAggregateOutputType | null
    _min: JogoMinAggregateOutputType | null
    _max: JogoMaxAggregateOutputType | null
  }

  export type JogoAvgAggregateOutputType = {
    avaliacao: number | null
  }

  export type JogoSumAggregateOutputType = {
    avaliacao: number | null
  }

  export type JogoMinAggregateOutputType = {
    id: string | null
    titulo: string | null
    descricao: string | null
    urlImagem: string | null
    desenvolvedor: string | null
    versao: string | null
    engine: string | null
    idioma: string | null
    avaliacao: number | null
    tags: string | null
    urlDownload: string | null
    urlDownloadWindows: string | null
    urlDownloadAndroid: string | null
    urlDownloadLinux: string | null
    urlDownloadMac: string | null
    censurado: boolean | null
    instalacao: string | null
    changelog: string | null
    notasDev: string | null
    dataLancamento: Date | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
    osWindows: boolean | null
    osAndroid: boolean | null
    osLinux: boolean | null
    osMac: boolean | null
  }

  export type JogoMaxAggregateOutputType = {
    id: string | null
    titulo: string | null
    descricao: string | null
    urlImagem: string | null
    desenvolvedor: string | null
    versao: string | null
    engine: string | null
    idioma: string | null
    avaliacao: number | null
    tags: string | null
    urlDownload: string | null
    urlDownloadWindows: string | null
    urlDownloadAndroid: string | null
    urlDownloadLinux: string | null
    urlDownloadMac: string | null
    censurado: boolean | null
    instalacao: string | null
    changelog: string | null
    notasDev: string | null
    dataLancamento: Date | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
    osWindows: boolean | null
    osAndroid: boolean | null
    osLinux: boolean | null
    osMac: boolean | null
  }

  export type JogoCountAggregateOutputType = {
    id: number
    titulo: number
    descricao: number
    urlImagem: number
    desenvolvedor: number
    versao: number
    engine: number
    idioma: number
    avaliacao: number
    tags: number
    urlDownload: number
    urlDownloadWindows: number
    urlDownloadAndroid: number
    urlDownloadLinux: number
    urlDownloadMac: number
    censurado: number
    instalacao: number
    changelog: number
    notasDev: number
    dataLancamento: number
    dataCriacao: number
    dataAtualizacao: number
    osWindows: number
    osAndroid: number
    osLinux: number
    osMac: number
    _all: number
  }


  export type JogoAvgAggregateInputType = {
    avaliacao?: true
  }

  export type JogoSumAggregateInputType = {
    avaliacao?: true
  }

  export type JogoMinAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    urlImagem?: true
    desenvolvedor?: true
    versao?: true
    engine?: true
    idioma?: true
    avaliacao?: true
    tags?: true
    urlDownload?: true
    urlDownloadWindows?: true
    urlDownloadAndroid?: true
    urlDownloadLinux?: true
    urlDownloadMac?: true
    censurado?: true
    instalacao?: true
    changelog?: true
    notasDev?: true
    dataLancamento?: true
    dataCriacao?: true
    dataAtualizacao?: true
    osWindows?: true
    osAndroid?: true
    osLinux?: true
    osMac?: true
  }

  export type JogoMaxAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    urlImagem?: true
    desenvolvedor?: true
    versao?: true
    engine?: true
    idioma?: true
    avaliacao?: true
    tags?: true
    urlDownload?: true
    urlDownloadWindows?: true
    urlDownloadAndroid?: true
    urlDownloadLinux?: true
    urlDownloadMac?: true
    censurado?: true
    instalacao?: true
    changelog?: true
    notasDev?: true
    dataLancamento?: true
    dataCriacao?: true
    dataAtualizacao?: true
    osWindows?: true
    osAndroid?: true
    osLinux?: true
    osMac?: true
  }

  export type JogoCountAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    urlImagem?: true
    desenvolvedor?: true
    versao?: true
    engine?: true
    idioma?: true
    avaliacao?: true
    tags?: true
    urlDownload?: true
    urlDownloadWindows?: true
    urlDownloadAndroid?: true
    urlDownloadLinux?: true
    urlDownloadMac?: true
    censurado?: true
    instalacao?: true
    changelog?: true
    notasDev?: true
    dataLancamento?: true
    dataCriacao?: true
    dataAtualizacao?: true
    osWindows?: true
    osAndroid?: true
    osLinux?: true
    osMac?: true
    _all?: true
  }

  export type JogoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Jogo to aggregate.
     */
    where?: JogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jogos to fetch.
     */
    orderBy?: JogoOrderByWithRelationInput | JogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Jogos
    **/
    _count?: true | JogoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JogoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JogoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JogoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JogoMaxAggregateInputType
  }

  export type GetJogoAggregateType<T extends JogoAggregateArgs> = {
        [P in keyof T & keyof AggregateJogo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJogo[P]>
      : GetScalarType<T[P], AggregateJogo[P]>
  }




  export type JogoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JogoWhereInput
    orderBy?: JogoOrderByWithAggregationInput | JogoOrderByWithAggregationInput[]
    by: JogoScalarFieldEnum[] | JogoScalarFieldEnum
    having?: JogoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JogoCountAggregateInputType | true
    _avg?: JogoAvgAggregateInputType
    _sum?: JogoSumAggregateInputType
    _min?: JogoMinAggregateInputType
    _max?: JogoMaxAggregateInputType
  }

  export type JogoGroupByOutputType = {
    id: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor: string
    versao: string
    engine: string
    idioma: string
    avaliacao: number
    tags: string
    urlDownload: string | null
    urlDownloadWindows: string | null
    urlDownloadAndroid: string | null
    urlDownloadLinux: string | null
    urlDownloadMac: string | null
    censurado: boolean
    instalacao: string
    changelog: string
    notasDev: string | null
    dataLancamento: Date
    dataCriacao: Date
    dataAtualizacao: Date
    osWindows: boolean
    osAndroid: boolean
    osLinux: boolean
    osMac: boolean
    _count: JogoCountAggregateOutputType | null
    _avg: JogoAvgAggregateOutputType | null
    _sum: JogoSumAggregateOutputType | null
    _min: JogoMinAggregateOutputType | null
    _max: JogoMaxAggregateOutputType | null
  }

  type GetJogoGroupByPayload<T extends JogoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JogoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JogoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JogoGroupByOutputType[P]>
            : GetScalarType<T[P], JogoGroupByOutputType[P]>
        }
      >
    >


  export type JogoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    urlImagem?: boolean
    desenvolvedor?: boolean
    versao?: boolean
    engine?: boolean
    idioma?: boolean
    avaliacao?: boolean
    tags?: boolean
    urlDownload?: boolean
    urlDownloadWindows?: boolean
    urlDownloadAndroid?: boolean
    urlDownloadLinux?: boolean
    urlDownloadMac?: boolean
    censurado?: boolean
    instalacao?: boolean
    changelog?: boolean
    notasDev?: boolean
    dataLancamento?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    imagens?: boolean | Jogo$imagensArgs<ExtArgs>
    comentarios?: boolean | Jogo$comentariosArgs<ExtArgs>
    favoritos?: boolean | Jogo$favoritosArgs<ExtArgs>
    _count?: boolean | JogoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jogo"]>

  export type JogoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    urlImagem?: boolean
    desenvolvedor?: boolean
    versao?: boolean
    engine?: boolean
    idioma?: boolean
    avaliacao?: boolean
    tags?: boolean
    urlDownload?: boolean
    urlDownloadWindows?: boolean
    urlDownloadAndroid?: boolean
    urlDownloadLinux?: boolean
    urlDownloadMac?: boolean
    censurado?: boolean
    instalacao?: boolean
    changelog?: boolean
    notasDev?: boolean
    dataLancamento?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
  }, ExtArgs["result"]["jogo"]>

  export type JogoSelectScalar = {
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    urlImagem?: boolean
    desenvolvedor?: boolean
    versao?: boolean
    engine?: boolean
    idioma?: boolean
    avaliacao?: boolean
    tags?: boolean
    urlDownload?: boolean
    urlDownloadWindows?: boolean
    urlDownloadAndroid?: boolean
    urlDownloadLinux?: boolean
    urlDownloadMac?: boolean
    censurado?: boolean
    instalacao?: boolean
    changelog?: boolean
    notasDev?: boolean
    dataLancamento?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
  }

  export type JogoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imagens?: boolean | Jogo$imagensArgs<ExtArgs>
    comentarios?: boolean | Jogo$comentariosArgs<ExtArgs>
    favoritos?: boolean | Jogo$favoritosArgs<ExtArgs>
    _count?: boolean | JogoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JogoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $JogoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Jogo"
    objects: {
      imagens: Prisma.$ImagemJogoPayload<ExtArgs>[]
      comentarios: Prisma.$ComentarioPayload<ExtArgs>[]
      favoritos: Prisma.$FavoritoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      titulo: string
      descricao: string
      urlImagem: string
      desenvolvedor: string
      versao: string
      engine: string
      idioma: string
      avaliacao: number
      tags: string
      urlDownload: string | null
      urlDownloadWindows: string | null
      urlDownloadAndroid: string | null
      urlDownloadLinux: string | null
      urlDownloadMac: string | null
      censurado: boolean
      instalacao: string
      changelog: string
      notasDev: string | null
      dataLancamento: Date
      dataCriacao: Date
      dataAtualizacao: Date
      osWindows: boolean
      osAndroid: boolean
      osLinux: boolean
      osMac: boolean
    }, ExtArgs["result"]["jogo"]>
    composites: {}
  }

  type JogoGetPayload<S extends boolean | null | undefined | JogoDefaultArgs> = $Result.GetResult<Prisma.$JogoPayload, S>

  type JogoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JogoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JogoCountAggregateInputType | true
    }

  export interface JogoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Jogo'], meta: { name: 'Jogo' } }
    /**
     * Find zero or one Jogo that matches the filter.
     * @param {JogoFindUniqueArgs} args - Arguments to find a Jogo
     * @example
     * // Get one Jogo
     * const jogo = await prisma.jogo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JogoFindUniqueArgs>(args: SelectSubset<T, JogoFindUniqueArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Jogo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JogoFindUniqueOrThrowArgs} args - Arguments to find a Jogo
     * @example
     * // Get one Jogo
     * const jogo = await prisma.jogo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JogoFindUniqueOrThrowArgs>(args: SelectSubset<T, JogoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Jogo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JogoFindFirstArgs} args - Arguments to find a Jogo
     * @example
     * // Get one Jogo
     * const jogo = await prisma.jogo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JogoFindFirstArgs>(args?: SelectSubset<T, JogoFindFirstArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Jogo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JogoFindFirstOrThrowArgs} args - Arguments to find a Jogo
     * @example
     * // Get one Jogo
     * const jogo = await prisma.jogo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JogoFindFirstOrThrowArgs>(args?: SelectSubset<T, JogoFindFirstOrThrowArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Jogos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JogoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Jogos
     * const jogos = await prisma.jogo.findMany()
     * 
     * // Get first 10 Jogos
     * const jogos = await prisma.jogo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jogoWithIdOnly = await prisma.jogo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JogoFindManyArgs>(args?: SelectSubset<T, JogoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Jogo.
     * @param {JogoCreateArgs} args - Arguments to create a Jogo.
     * @example
     * // Create one Jogo
     * const Jogo = await prisma.jogo.create({
     *   data: {
     *     // ... data to create a Jogo
     *   }
     * })
     * 
     */
    create<T extends JogoCreateArgs>(args: SelectSubset<T, JogoCreateArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Jogos.
     * @param {JogoCreateManyArgs} args - Arguments to create many Jogos.
     * @example
     * // Create many Jogos
     * const jogo = await prisma.jogo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JogoCreateManyArgs>(args?: SelectSubset<T, JogoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Jogos and returns the data saved in the database.
     * @param {JogoCreateManyAndReturnArgs} args - Arguments to create many Jogos.
     * @example
     * // Create many Jogos
     * const jogo = await prisma.jogo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Jogos and only return the `id`
     * const jogoWithIdOnly = await prisma.jogo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JogoCreateManyAndReturnArgs>(args?: SelectSubset<T, JogoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Jogo.
     * @param {JogoDeleteArgs} args - Arguments to delete one Jogo.
     * @example
     * // Delete one Jogo
     * const Jogo = await prisma.jogo.delete({
     *   where: {
     *     // ... filter to delete one Jogo
     *   }
     * })
     * 
     */
    delete<T extends JogoDeleteArgs>(args: SelectSubset<T, JogoDeleteArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Jogo.
     * @param {JogoUpdateArgs} args - Arguments to update one Jogo.
     * @example
     * // Update one Jogo
     * const jogo = await prisma.jogo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JogoUpdateArgs>(args: SelectSubset<T, JogoUpdateArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Jogos.
     * @param {JogoDeleteManyArgs} args - Arguments to filter Jogos to delete.
     * @example
     * // Delete a few Jogos
     * const { count } = await prisma.jogo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JogoDeleteManyArgs>(args?: SelectSubset<T, JogoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JogoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Jogos
     * const jogo = await prisma.jogo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JogoUpdateManyArgs>(args: SelectSubset<T, JogoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Jogo.
     * @param {JogoUpsertArgs} args - Arguments to update or create a Jogo.
     * @example
     * // Update or create a Jogo
     * const jogo = await prisma.jogo.upsert({
     *   create: {
     *     // ... data to create a Jogo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Jogo we want to update
     *   }
     * })
     */
    upsert<T extends JogoUpsertArgs>(args: SelectSubset<T, JogoUpsertArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Jogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JogoCountArgs} args - Arguments to filter Jogos to count.
     * @example
     * // Count the number of Jogos
     * const count = await prisma.jogo.count({
     *   where: {
     *     // ... the filter for the Jogos we want to count
     *   }
     * })
    **/
    count<T extends JogoCountArgs>(
      args?: Subset<T, JogoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JogoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Jogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JogoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JogoAggregateArgs>(args: Subset<T, JogoAggregateArgs>): Prisma.PrismaPromise<GetJogoAggregateType<T>>

    /**
     * Group by Jogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JogoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JogoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JogoGroupByArgs['orderBy'] }
        : { orderBy?: JogoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JogoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJogoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Jogo model
   */
  readonly fields: JogoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Jogo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JogoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    imagens<T extends Jogo$imagensArgs<ExtArgs> = {}>(args?: Subset<T, Jogo$imagensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "findMany"> | Null>
    comentarios<T extends Jogo$comentariosArgs<ExtArgs> = {}>(args?: Subset<T, Jogo$comentariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "findMany"> | Null>
    favoritos<T extends Jogo$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Jogo$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Jogo model
   */ 
  interface JogoFieldRefs {
    readonly id: FieldRef<"Jogo", 'String'>
    readonly titulo: FieldRef<"Jogo", 'String'>
    readonly descricao: FieldRef<"Jogo", 'String'>
    readonly urlImagem: FieldRef<"Jogo", 'String'>
    readonly desenvolvedor: FieldRef<"Jogo", 'String'>
    readonly versao: FieldRef<"Jogo", 'String'>
    readonly engine: FieldRef<"Jogo", 'String'>
    readonly idioma: FieldRef<"Jogo", 'String'>
    readonly avaliacao: FieldRef<"Jogo", 'Float'>
    readonly tags: FieldRef<"Jogo", 'String'>
    readonly urlDownload: FieldRef<"Jogo", 'String'>
    readonly urlDownloadWindows: FieldRef<"Jogo", 'String'>
    readonly urlDownloadAndroid: FieldRef<"Jogo", 'String'>
    readonly urlDownloadLinux: FieldRef<"Jogo", 'String'>
    readonly urlDownloadMac: FieldRef<"Jogo", 'String'>
    readonly censurado: FieldRef<"Jogo", 'Boolean'>
    readonly instalacao: FieldRef<"Jogo", 'String'>
    readonly changelog: FieldRef<"Jogo", 'String'>
    readonly notasDev: FieldRef<"Jogo", 'String'>
    readonly dataLancamento: FieldRef<"Jogo", 'DateTime'>
    readonly dataCriacao: FieldRef<"Jogo", 'DateTime'>
    readonly dataAtualizacao: FieldRef<"Jogo", 'DateTime'>
    readonly osWindows: FieldRef<"Jogo", 'Boolean'>
    readonly osAndroid: FieldRef<"Jogo", 'Boolean'>
    readonly osLinux: FieldRef<"Jogo", 'Boolean'>
    readonly osMac: FieldRef<"Jogo", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Jogo findUnique
   */
  export type JogoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * Filter, which Jogo to fetch.
     */
    where: JogoWhereUniqueInput
  }

  /**
   * Jogo findUniqueOrThrow
   */
  export type JogoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * Filter, which Jogo to fetch.
     */
    where: JogoWhereUniqueInput
  }

  /**
   * Jogo findFirst
   */
  export type JogoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * Filter, which Jogo to fetch.
     */
    where?: JogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jogos to fetch.
     */
    orderBy?: JogoOrderByWithRelationInput | JogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jogos.
     */
    cursor?: JogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jogos.
     */
    distinct?: JogoScalarFieldEnum | JogoScalarFieldEnum[]
  }

  /**
   * Jogo findFirstOrThrow
   */
  export type JogoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * Filter, which Jogo to fetch.
     */
    where?: JogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jogos to fetch.
     */
    orderBy?: JogoOrderByWithRelationInput | JogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Jogos.
     */
    cursor?: JogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Jogos.
     */
    distinct?: JogoScalarFieldEnum | JogoScalarFieldEnum[]
  }

  /**
   * Jogo findMany
   */
  export type JogoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * Filter, which Jogos to fetch.
     */
    where?: JogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Jogos to fetch.
     */
    orderBy?: JogoOrderByWithRelationInput | JogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Jogos.
     */
    cursor?: JogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Jogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Jogos.
     */
    skip?: number
    distinct?: JogoScalarFieldEnum | JogoScalarFieldEnum[]
  }

  /**
   * Jogo create
   */
  export type JogoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * The data needed to create a Jogo.
     */
    data: XOR<JogoCreateInput, JogoUncheckedCreateInput>
  }

  /**
   * Jogo createMany
   */
  export type JogoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Jogos.
     */
    data: JogoCreateManyInput | JogoCreateManyInput[]
  }

  /**
   * Jogo createManyAndReturn
   */
  export type JogoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Jogos.
     */
    data: JogoCreateManyInput | JogoCreateManyInput[]
  }

  /**
   * Jogo update
   */
  export type JogoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * The data needed to update a Jogo.
     */
    data: XOR<JogoUpdateInput, JogoUncheckedUpdateInput>
    /**
     * Choose, which Jogo to update.
     */
    where: JogoWhereUniqueInput
  }

  /**
   * Jogo updateMany
   */
  export type JogoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Jogos.
     */
    data: XOR<JogoUpdateManyMutationInput, JogoUncheckedUpdateManyInput>
    /**
     * Filter which Jogos to update
     */
    where?: JogoWhereInput
  }

  /**
   * Jogo upsert
   */
  export type JogoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * The filter to search for the Jogo to update in case it exists.
     */
    where: JogoWhereUniqueInput
    /**
     * In case the Jogo found by the `where` argument doesn't exist, create a new Jogo with this data.
     */
    create: XOR<JogoCreateInput, JogoUncheckedCreateInput>
    /**
     * In case the Jogo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JogoUpdateInput, JogoUncheckedUpdateInput>
  }

  /**
   * Jogo delete
   */
  export type JogoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
    /**
     * Filter which Jogo to delete.
     */
    where: JogoWhereUniqueInput
  }

  /**
   * Jogo deleteMany
   */
  export type JogoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Jogos to delete
     */
    where?: JogoWhereInput
  }

  /**
   * Jogo.imagens
   */
  export type Jogo$imagensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    where?: ImagemJogoWhereInput
    orderBy?: ImagemJogoOrderByWithRelationInput | ImagemJogoOrderByWithRelationInput[]
    cursor?: ImagemJogoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagemJogoScalarFieldEnum | ImagemJogoScalarFieldEnum[]
  }

  /**
   * Jogo.comentarios
   */
  export type Jogo$comentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    where?: ComentarioWhereInput
    orderBy?: ComentarioOrderByWithRelationInput | ComentarioOrderByWithRelationInput[]
    cursor?: ComentarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * Jogo.favoritos
   */
  export type Jogo$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    cursor?: FavoritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Jogo without action
   */
  export type JogoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Jogo
     */
    select?: JogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JogoInclude<ExtArgs> | null
  }


  /**
   * Model ImagemJogo
   */

  export type AggregateImagemJogo = {
    _count: ImagemJogoCountAggregateOutputType | null
    _min: ImagemJogoMinAggregateOutputType | null
    _max: ImagemJogoMaxAggregateOutputType | null
  }

  export type ImagemJogoMinAggregateOutputType = {
    id: string | null
    idJogo: string | null
    urlImagem: string | null
  }

  export type ImagemJogoMaxAggregateOutputType = {
    id: string | null
    idJogo: string | null
    urlImagem: string | null
  }

  export type ImagemJogoCountAggregateOutputType = {
    id: number
    idJogo: number
    urlImagem: number
    _all: number
  }


  export type ImagemJogoMinAggregateInputType = {
    id?: true
    idJogo?: true
    urlImagem?: true
  }

  export type ImagemJogoMaxAggregateInputType = {
    id?: true
    idJogo?: true
    urlImagem?: true
  }

  export type ImagemJogoCountAggregateInputType = {
    id?: true
    idJogo?: true
    urlImagem?: true
    _all?: true
  }

  export type ImagemJogoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImagemJogo to aggregate.
     */
    where?: ImagemJogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagemJogos to fetch.
     */
    orderBy?: ImagemJogoOrderByWithRelationInput | ImagemJogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImagemJogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagemJogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagemJogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ImagemJogos
    **/
    _count?: true | ImagemJogoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImagemJogoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImagemJogoMaxAggregateInputType
  }

  export type GetImagemJogoAggregateType<T extends ImagemJogoAggregateArgs> = {
        [P in keyof T & keyof AggregateImagemJogo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagemJogo[P]>
      : GetScalarType<T[P], AggregateImagemJogo[P]>
  }




  export type ImagemJogoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagemJogoWhereInput
    orderBy?: ImagemJogoOrderByWithAggregationInput | ImagemJogoOrderByWithAggregationInput[]
    by: ImagemJogoScalarFieldEnum[] | ImagemJogoScalarFieldEnum
    having?: ImagemJogoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImagemJogoCountAggregateInputType | true
    _min?: ImagemJogoMinAggregateInputType
    _max?: ImagemJogoMaxAggregateInputType
  }

  export type ImagemJogoGroupByOutputType = {
    id: string
    idJogo: string
    urlImagem: string
    _count: ImagemJogoCountAggregateOutputType | null
    _min: ImagemJogoMinAggregateOutputType | null
    _max: ImagemJogoMaxAggregateOutputType | null
  }

  type GetImagemJogoGroupByPayload<T extends ImagemJogoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImagemJogoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImagemJogoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImagemJogoGroupByOutputType[P]>
            : GetScalarType<T[P], ImagemJogoGroupByOutputType[P]>
        }
      >
    >


  export type ImagemJogoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idJogo?: boolean
    urlImagem?: boolean
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagemJogo"]>

  export type ImagemJogoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idJogo?: boolean
    urlImagem?: boolean
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagemJogo"]>

  export type ImagemJogoSelectScalar = {
    id?: boolean
    idJogo?: boolean
    urlImagem?: boolean
  }

  export type ImagemJogoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
  }
  export type ImagemJogoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
  }

  export type $ImagemJogoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ImagemJogo"
    objects: {
      jogo: Prisma.$JogoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      idJogo: string
      urlImagem: string
    }, ExtArgs["result"]["imagemJogo"]>
    composites: {}
  }

  type ImagemJogoGetPayload<S extends boolean | null | undefined | ImagemJogoDefaultArgs> = $Result.GetResult<Prisma.$ImagemJogoPayload, S>

  type ImagemJogoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ImagemJogoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ImagemJogoCountAggregateInputType | true
    }

  export interface ImagemJogoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ImagemJogo'], meta: { name: 'ImagemJogo' } }
    /**
     * Find zero or one ImagemJogo that matches the filter.
     * @param {ImagemJogoFindUniqueArgs} args - Arguments to find a ImagemJogo
     * @example
     * // Get one ImagemJogo
     * const imagemJogo = await prisma.imagemJogo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImagemJogoFindUniqueArgs>(args: SelectSubset<T, ImagemJogoFindUniqueArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ImagemJogo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ImagemJogoFindUniqueOrThrowArgs} args - Arguments to find a ImagemJogo
     * @example
     * // Get one ImagemJogo
     * const imagemJogo = await prisma.imagemJogo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImagemJogoFindUniqueOrThrowArgs>(args: SelectSubset<T, ImagemJogoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ImagemJogo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemJogoFindFirstArgs} args - Arguments to find a ImagemJogo
     * @example
     * // Get one ImagemJogo
     * const imagemJogo = await prisma.imagemJogo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImagemJogoFindFirstArgs>(args?: SelectSubset<T, ImagemJogoFindFirstArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ImagemJogo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemJogoFindFirstOrThrowArgs} args - Arguments to find a ImagemJogo
     * @example
     * // Get one ImagemJogo
     * const imagemJogo = await prisma.imagemJogo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImagemJogoFindFirstOrThrowArgs>(args?: SelectSubset<T, ImagemJogoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ImagemJogos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemJogoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ImagemJogos
     * const imagemJogos = await prisma.imagemJogo.findMany()
     * 
     * // Get first 10 ImagemJogos
     * const imagemJogos = await prisma.imagemJogo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imagemJogoWithIdOnly = await prisma.imagemJogo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImagemJogoFindManyArgs>(args?: SelectSubset<T, ImagemJogoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ImagemJogo.
     * @param {ImagemJogoCreateArgs} args - Arguments to create a ImagemJogo.
     * @example
     * // Create one ImagemJogo
     * const ImagemJogo = await prisma.imagemJogo.create({
     *   data: {
     *     // ... data to create a ImagemJogo
     *   }
     * })
     * 
     */
    create<T extends ImagemJogoCreateArgs>(args: SelectSubset<T, ImagemJogoCreateArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ImagemJogos.
     * @param {ImagemJogoCreateManyArgs} args - Arguments to create many ImagemJogos.
     * @example
     * // Create many ImagemJogos
     * const imagemJogo = await prisma.imagemJogo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImagemJogoCreateManyArgs>(args?: SelectSubset<T, ImagemJogoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ImagemJogos and returns the data saved in the database.
     * @param {ImagemJogoCreateManyAndReturnArgs} args - Arguments to create many ImagemJogos.
     * @example
     * // Create many ImagemJogos
     * const imagemJogo = await prisma.imagemJogo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ImagemJogos and only return the `id`
     * const imagemJogoWithIdOnly = await prisma.imagemJogo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ImagemJogoCreateManyAndReturnArgs>(args?: SelectSubset<T, ImagemJogoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ImagemJogo.
     * @param {ImagemJogoDeleteArgs} args - Arguments to delete one ImagemJogo.
     * @example
     * // Delete one ImagemJogo
     * const ImagemJogo = await prisma.imagemJogo.delete({
     *   where: {
     *     // ... filter to delete one ImagemJogo
     *   }
     * })
     * 
     */
    delete<T extends ImagemJogoDeleteArgs>(args: SelectSubset<T, ImagemJogoDeleteArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ImagemJogo.
     * @param {ImagemJogoUpdateArgs} args - Arguments to update one ImagemJogo.
     * @example
     * // Update one ImagemJogo
     * const imagemJogo = await prisma.imagemJogo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImagemJogoUpdateArgs>(args: SelectSubset<T, ImagemJogoUpdateArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ImagemJogos.
     * @param {ImagemJogoDeleteManyArgs} args - Arguments to filter ImagemJogos to delete.
     * @example
     * // Delete a few ImagemJogos
     * const { count } = await prisma.imagemJogo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImagemJogoDeleteManyArgs>(args?: SelectSubset<T, ImagemJogoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ImagemJogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemJogoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ImagemJogos
     * const imagemJogo = await prisma.imagemJogo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImagemJogoUpdateManyArgs>(args: SelectSubset<T, ImagemJogoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ImagemJogo.
     * @param {ImagemJogoUpsertArgs} args - Arguments to update or create a ImagemJogo.
     * @example
     * // Update or create a ImagemJogo
     * const imagemJogo = await prisma.imagemJogo.upsert({
     *   create: {
     *     // ... data to create a ImagemJogo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ImagemJogo we want to update
     *   }
     * })
     */
    upsert<T extends ImagemJogoUpsertArgs>(args: SelectSubset<T, ImagemJogoUpsertArgs<ExtArgs>>): Prisma__ImagemJogoClient<$Result.GetResult<Prisma.$ImagemJogoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ImagemJogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemJogoCountArgs} args - Arguments to filter ImagemJogos to count.
     * @example
     * // Count the number of ImagemJogos
     * const count = await prisma.imagemJogo.count({
     *   where: {
     *     // ... the filter for the ImagemJogos we want to count
     *   }
     * })
    **/
    count<T extends ImagemJogoCountArgs>(
      args?: Subset<T, ImagemJogoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImagemJogoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ImagemJogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemJogoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImagemJogoAggregateArgs>(args: Subset<T, ImagemJogoAggregateArgs>): Prisma.PrismaPromise<GetImagemJogoAggregateType<T>>

    /**
     * Group by ImagemJogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagemJogoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImagemJogoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImagemJogoGroupByArgs['orderBy'] }
        : { orderBy?: ImagemJogoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImagemJogoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagemJogoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ImagemJogo model
   */
  readonly fields: ImagemJogoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ImagemJogo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImagemJogoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    jogo<T extends JogoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JogoDefaultArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ImagemJogo model
   */ 
  interface ImagemJogoFieldRefs {
    readonly id: FieldRef<"ImagemJogo", 'String'>
    readonly idJogo: FieldRef<"ImagemJogo", 'String'>
    readonly urlImagem: FieldRef<"ImagemJogo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ImagemJogo findUnique
   */
  export type ImagemJogoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * Filter, which ImagemJogo to fetch.
     */
    where: ImagemJogoWhereUniqueInput
  }

  /**
   * ImagemJogo findUniqueOrThrow
   */
  export type ImagemJogoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * Filter, which ImagemJogo to fetch.
     */
    where: ImagemJogoWhereUniqueInput
  }

  /**
   * ImagemJogo findFirst
   */
  export type ImagemJogoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * Filter, which ImagemJogo to fetch.
     */
    where?: ImagemJogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagemJogos to fetch.
     */
    orderBy?: ImagemJogoOrderByWithRelationInput | ImagemJogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImagemJogos.
     */
    cursor?: ImagemJogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagemJogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagemJogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImagemJogos.
     */
    distinct?: ImagemJogoScalarFieldEnum | ImagemJogoScalarFieldEnum[]
  }

  /**
   * ImagemJogo findFirstOrThrow
   */
  export type ImagemJogoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * Filter, which ImagemJogo to fetch.
     */
    where?: ImagemJogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagemJogos to fetch.
     */
    orderBy?: ImagemJogoOrderByWithRelationInput | ImagemJogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImagemJogos.
     */
    cursor?: ImagemJogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagemJogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagemJogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImagemJogos.
     */
    distinct?: ImagemJogoScalarFieldEnum | ImagemJogoScalarFieldEnum[]
  }

  /**
   * ImagemJogo findMany
   */
  export type ImagemJogoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * Filter, which ImagemJogos to fetch.
     */
    where?: ImagemJogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagemJogos to fetch.
     */
    orderBy?: ImagemJogoOrderByWithRelationInput | ImagemJogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ImagemJogos.
     */
    cursor?: ImagemJogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagemJogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagemJogos.
     */
    skip?: number
    distinct?: ImagemJogoScalarFieldEnum | ImagemJogoScalarFieldEnum[]
  }

  /**
   * ImagemJogo create
   */
  export type ImagemJogoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * The data needed to create a ImagemJogo.
     */
    data: XOR<ImagemJogoCreateInput, ImagemJogoUncheckedCreateInput>
  }

  /**
   * ImagemJogo createMany
   */
  export type ImagemJogoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ImagemJogos.
     */
    data: ImagemJogoCreateManyInput | ImagemJogoCreateManyInput[]
  }

  /**
   * ImagemJogo createManyAndReturn
   */
  export type ImagemJogoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ImagemJogos.
     */
    data: ImagemJogoCreateManyInput | ImagemJogoCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ImagemJogo update
   */
  export type ImagemJogoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * The data needed to update a ImagemJogo.
     */
    data: XOR<ImagemJogoUpdateInput, ImagemJogoUncheckedUpdateInput>
    /**
     * Choose, which ImagemJogo to update.
     */
    where: ImagemJogoWhereUniqueInput
  }

  /**
   * ImagemJogo updateMany
   */
  export type ImagemJogoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ImagemJogos.
     */
    data: XOR<ImagemJogoUpdateManyMutationInput, ImagemJogoUncheckedUpdateManyInput>
    /**
     * Filter which ImagemJogos to update
     */
    where?: ImagemJogoWhereInput
  }

  /**
   * ImagemJogo upsert
   */
  export type ImagemJogoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * The filter to search for the ImagemJogo to update in case it exists.
     */
    where: ImagemJogoWhereUniqueInput
    /**
     * In case the ImagemJogo found by the `where` argument doesn't exist, create a new ImagemJogo with this data.
     */
    create: XOR<ImagemJogoCreateInput, ImagemJogoUncheckedCreateInput>
    /**
     * In case the ImagemJogo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImagemJogoUpdateInput, ImagemJogoUncheckedUpdateInput>
  }

  /**
   * ImagemJogo delete
   */
  export type ImagemJogoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
    /**
     * Filter which ImagemJogo to delete.
     */
    where: ImagemJogoWhereUniqueInput
  }

  /**
   * ImagemJogo deleteMany
   */
  export type ImagemJogoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImagemJogos to delete
     */
    where?: ImagemJogoWhereInput
  }

  /**
   * ImagemJogo without action
   */
  export type ImagemJogoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagemJogo
     */
    select?: ImagemJogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagemJogoInclude<ExtArgs> | null
  }


  /**
   * Model Comentario
   */

  export type AggregateComentario = {
    _count: ComentarioCountAggregateOutputType | null
    _avg: ComentarioAvgAggregateOutputType | null
    _sum: ComentarioSumAggregateOutputType | null
    _min: ComentarioMinAggregateOutputType | null
    _max: ComentarioMaxAggregateOutputType | null
  }

  export type ComentarioAvgAggregateOutputType = {
    curtidas: number | null
  }

  export type ComentarioSumAggregateOutputType = {
    curtidas: number | null
  }

  export type ComentarioMinAggregateOutputType = {
    id: string | null
    conteudo: string | null
    curtidas: number | null
    idJogo: string | null
    idUsuario: string | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
  }

  export type ComentarioMaxAggregateOutputType = {
    id: string | null
    conteudo: string | null
    curtidas: number | null
    idJogo: string | null
    idUsuario: string | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
  }

  export type ComentarioCountAggregateOutputType = {
    id: number
    conteudo: number
    curtidas: number
    idJogo: number
    idUsuario: number
    dataCriacao: number
    dataAtualizacao: number
    _all: number
  }


  export type ComentarioAvgAggregateInputType = {
    curtidas?: true
  }

  export type ComentarioSumAggregateInputType = {
    curtidas?: true
  }

  export type ComentarioMinAggregateInputType = {
    id?: true
    conteudo?: true
    curtidas?: true
    idJogo?: true
    idUsuario?: true
    dataCriacao?: true
    dataAtualizacao?: true
  }

  export type ComentarioMaxAggregateInputType = {
    id?: true
    conteudo?: true
    curtidas?: true
    idJogo?: true
    idUsuario?: true
    dataCriacao?: true
    dataAtualizacao?: true
  }

  export type ComentarioCountAggregateInputType = {
    id?: true
    conteudo?: true
    curtidas?: true
    idJogo?: true
    idUsuario?: true
    dataCriacao?: true
    dataAtualizacao?: true
    _all?: true
  }

  export type ComentarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comentario to aggregate.
     */
    where?: ComentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comentarios to fetch.
     */
    orderBy?: ComentarioOrderByWithRelationInput | ComentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comentarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comentarios
    **/
    _count?: true | ComentarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComentarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComentarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComentarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComentarioMaxAggregateInputType
  }

  export type GetComentarioAggregateType<T extends ComentarioAggregateArgs> = {
        [P in keyof T & keyof AggregateComentario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComentario[P]>
      : GetScalarType<T[P], AggregateComentario[P]>
  }




  export type ComentarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioWhereInput
    orderBy?: ComentarioOrderByWithAggregationInput | ComentarioOrderByWithAggregationInput[]
    by: ComentarioScalarFieldEnum[] | ComentarioScalarFieldEnum
    having?: ComentarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComentarioCountAggregateInputType | true
    _avg?: ComentarioAvgAggregateInputType
    _sum?: ComentarioSumAggregateInputType
    _min?: ComentarioMinAggregateInputType
    _max?: ComentarioMaxAggregateInputType
  }

  export type ComentarioGroupByOutputType = {
    id: string
    conteudo: string
    curtidas: number
    idJogo: string
    idUsuario: string
    dataCriacao: Date
    dataAtualizacao: Date
    _count: ComentarioCountAggregateOutputType | null
    _avg: ComentarioAvgAggregateOutputType | null
    _sum: ComentarioSumAggregateOutputType | null
    _min: ComentarioMinAggregateOutputType | null
    _max: ComentarioMaxAggregateOutputType | null
  }

  type GetComentarioGroupByPayload<T extends ComentarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComentarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComentarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComentarioGroupByOutputType[P]>
            : GetScalarType<T[P], ComentarioGroupByOutputType[P]>
        }
      >
    >


  export type ComentarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conteudo?: boolean
    curtidas?: boolean
    idJogo?: boolean
    idUsuario?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentario"]>

  export type ComentarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conteudo?: boolean
    curtidas?: boolean
    idJogo?: boolean
    idUsuario?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentario"]>

  export type ComentarioSelectScalar = {
    id?: boolean
    conteudo?: boolean
    curtidas?: boolean
    idJogo?: boolean
    idUsuario?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
  }

  export type ComentarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ComentarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ComentarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comentario"
    objects: {
      jogo: Prisma.$JogoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      conteudo: string
      curtidas: number
      idJogo: string
      idUsuario: string
      dataCriacao: Date
      dataAtualizacao: Date
    }, ExtArgs["result"]["comentario"]>
    composites: {}
  }

  type ComentarioGetPayload<S extends boolean | null | undefined | ComentarioDefaultArgs> = $Result.GetResult<Prisma.$ComentarioPayload, S>

  type ComentarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ComentarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ComentarioCountAggregateInputType | true
    }

  export interface ComentarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comentario'], meta: { name: 'Comentario' } }
    /**
     * Find zero or one Comentario that matches the filter.
     * @param {ComentarioFindUniqueArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComentarioFindUniqueArgs>(args: SelectSubset<T, ComentarioFindUniqueArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Comentario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ComentarioFindUniqueOrThrowArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComentarioFindUniqueOrThrowArgs>(args: SelectSubset<T, ComentarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Comentario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioFindFirstArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComentarioFindFirstArgs>(args?: SelectSubset<T, ComentarioFindFirstArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Comentario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioFindFirstOrThrowArgs} args - Arguments to find a Comentario
     * @example
     * // Get one Comentario
     * const comentario = await prisma.comentario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComentarioFindFirstOrThrowArgs>(args?: SelectSubset<T, ComentarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Comentarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comentarios
     * const comentarios = await prisma.comentario.findMany()
     * 
     * // Get first 10 Comentarios
     * const comentarios = await prisma.comentario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comentarioWithIdOnly = await prisma.comentario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComentarioFindManyArgs>(args?: SelectSubset<T, ComentarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Comentario.
     * @param {ComentarioCreateArgs} args - Arguments to create a Comentario.
     * @example
     * // Create one Comentario
     * const Comentario = await prisma.comentario.create({
     *   data: {
     *     // ... data to create a Comentario
     *   }
     * })
     * 
     */
    create<T extends ComentarioCreateArgs>(args: SelectSubset<T, ComentarioCreateArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Comentarios.
     * @param {ComentarioCreateManyArgs} args - Arguments to create many Comentarios.
     * @example
     * // Create many Comentarios
     * const comentario = await prisma.comentario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComentarioCreateManyArgs>(args?: SelectSubset<T, ComentarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comentarios and returns the data saved in the database.
     * @param {ComentarioCreateManyAndReturnArgs} args - Arguments to create many Comentarios.
     * @example
     * // Create many Comentarios
     * const comentario = await prisma.comentario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comentarios and only return the `id`
     * const comentarioWithIdOnly = await prisma.comentario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComentarioCreateManyAndReturnArgs>(args?: SelectSubset<T, ComentarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Comentario.
     * @param {ComentarioDeleteArgs} args - Arguments to delete one Comentario.
     * @example
     * // Delete one Comentario
     * const Comentario = await prisma.comentario.delete({
     *   where: {
     *     // ... filter to delete one Comentario
     *   }
     * })
     * 
     */
    delete<T extends ComentarioDeleteArgs>(args: SelectSubset<T, ComentarioDeleteArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Comentario.
     * @param {ComentarioUpdateArgs} args - Arguments to update one Comentario.
     * @example
     * // Update one Comentario
     * const comentario = await prisma.comentario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComentarioUpdateArgs>(args: SelectSubset<T, ComentarioUpdateArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Comentarios.
     * @param {ComentarioDeleteManyArgs} args - Arguments to filter Comentarios to delete.
     * @example
     * // Delete a few Comentarios
     * const { count } = await prisma.comentario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComentarioDeleteManyArgs>(args?: SelectSubset<T, ComentarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comentarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comentarios
     * const comentario = await prisma.comentario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComentarioUpdateManyArgs>(args: SelectSubset<T, ComentarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Comentario.
     * @param {ComentarioUpsertArgs} args - Arguments to update or create a Comentario.
     * @example
     * // Update or create a Comentario
     * const comentario = await prisma.comentario.upsert({
     *   create: {
     *     // ... data to create a Comentario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comentario we want to update
     *   }
     * })
     */
    upsert<T extends ComentarioUpsertArgs>(args: SelectSubset<T, ComentarioUpsertArgs<ExtArgs>>): Prisma__ComentarioClient<$Result.GetResult<Prisma.$ComentarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Comentarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioCountArgs} args - Arguments to filter Comentarios to count.
     * @example
     * // Count the number of Comentarios
     * const count = await prisma.comentario.count({
     *   where: {
     *     // ... the filter for the Comentarios we want to count
     *   }
     * })
    **/
    count<T extends ComentarioCountArgs>(
      args?: Subset<T, ComentarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComentarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comentario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComentarioAggregateArgs>(args: Subset<T, ComentarioAggregateArgs>): Prisma.PrismaPromise<GetComentarioAggregateType<T>>

    /**
     * Group by Comentario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComentarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComentarioGroupByArgs['orderBy'] }
        : { orderBy?: ComentarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComentarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComentarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comentario model
   */
  readonly fields: ComentarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comentario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComentarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    jogo<T extends JogoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JogoDefaultArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comentario model
   */ 
  interface ComentarioFieldRefs {
    readonly id: FieldRef<"Comentario", 'String'>
    readonly conteudo: FieldRef<"Comentario", 'String'>
    readonly curtidas: FieldRef<"Comentario", 'Int'>
    readonly idJogo: FieldRef<"Comentario", 'String'>
    readonly idUsuario: FieldRef<"Comentario", 'String'>
    readonly dataCriacao: FieldRef<"Comentario", 'DateTime'>
    readonly dataAtualizacao: FieldRef<"Comentario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Comentario findUnique
   */
  export type ComentarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * Filter, which Comentario to fetch.
     */
    where: ComentarioWhereUniqueInput
  }

  /**
   * Comentario findUniqueOrThrow
   */
  export type ComentarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * Filter, which Comentario to fetch.
     */
    where: ComentarioWhereUniqueInput
  }

  /**
   * Comentario findFirst
   */
  export type ComentarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * Filter, which Comentario to fetch.
     */
    where?: ComentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comentarios to fetch.
     */
    orderBy?: ComentarioOrderByWithRelationInput | ComentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comentarios.
     */
    cursor?: ComentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comentarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comentarios.
     */
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * Comentario findFirstOrThrow
   */
  export type ComentarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * Filter, which Comentario to fetch.
     */
    where?: ComentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comentarios to fetch.
     */
    orderBy?: ComentarioOrderByWithRelationInput | ComentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comentarios.
     */
    cursor?: ComentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comentarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comentarios.
     */
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * Comentario findMany
   */
  export type ComentarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * Filter, which Comentarios to fetch.
     */
    where?: ComentarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comentarios to fetch.
     */
    orderBy?: ComentarioOrderByWithRelationInput | ComentarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comentarios.
     */
    cursor?: ComentarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comentarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comentarios.
     */
    skip?: number
    distinct?: ComentarioScalarFieldEnum | ComentarioScalarFieldEnum[]
  }

  /**
   * Comentario create
   */
  export type ComentarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Comentario.
     */
    data: XOR<ComentarioCreateInput, ComentarioUncheckedCreateInput>
  }

  /**
   * Comentario createMany
   */
  export type ComentarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comentarios.
     */
    data: ComentarioCreateManyInput | ComentarioCreateManyInput[]
  }

  /**
   * Comentario createManyAndReturn
   */
  export type ComentarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Comentarios.
     */
    data: ComentarioCreateManyInput | ComentarioCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comentario update
   */
  export type ComentarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Comentario.
     */
    data: XOR<ComentarioUpdateInput, ComentarioUncheckedUpdateInput>
    /**
     * Choose, which Comentario to update.
     */
    where: ComentarioWhereUniqueInput
  }

  /**
   * Comentario updateMany
   */
  export type ComentarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comentarios.
     */
    data: XOR<ComentarioUpdateManyMutationInput, ComentarioUncheckedUpdateManyInput>
    /**
     * Filter which Comentarios to update
     */
    where?: ComentarioWhereInput
  }

  /**
   * Comentario upsert
   */
  export type ComentarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Comentario to update in case it exists.
     */
    where: ComentarioWhereUniqueInput
    /**
     * In case the Comentario found by the `where` argument doesn't exist, create a new Comentario with this data.
     */
    create: XOR<ComentarioCreateInput, ComentarioUncheckedCreateInput>
    /**
     * In case the Comentario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComentarioUpdateInput, ComentarioUncheckedUpdateInput>
  }

  /**
   * Comentario delete
   */
  export type ComentarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
    /**
     * Filter which Comentario to delete.
     */
    where: ComentarioWhereUniqueInput
  }

  /**
   * Comentario deleteMany
   */
  export type ComentarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comentarios to delete
     */
    where?: ComentarioWhereInput
  }

  /**
   * Comentario without action
   */
  export type ComentarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comentario
     */
    select?: ComentarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioInclude<ExtArgs> | null
  }


  /**
   * Model Favorito
   */

  export type AggregateFavorito = {
    _count: FavoritoCountAggregateOutputType | null
    _min: FavoritoMinAggregateOutputType | null
    _max: FavoritoMaxAggregateOutputType | null
  }

  export type FavoritoMinAggregateOutputType = {
    id: string | null
    idJogo: string | null
    idUsuario: string | null
  }

  export type FavoritoMaxAggregateOutputType = {
    id: string | null
    idJogo: string | null
    idUsuario: string | null
  }

  export type FavoritoCountAggregateOutputType = {
    id: number
    idJogo: number
    idUsuario: number
    _all: number
  }


  export type FavoritoMinAggregateInputType = {
    id?: true
    idJogo?: true
    idUsuario?: true
  }

  export type FavoritoMaxAggregateInputType = {
    id?: true
    idJogo?: true
    idUsuario?: true
  }

  export type FavoritoCountAggregateInputType = {
    id?: true
    idJogo?: true
    idUsuario?: true
    _all?: true
  }

  export type FavoritoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorito to aggregate.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favoritos
    **/
    _count?: true | FavoritoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritoMaxAggregateInputType
  }

  export type GetFavoritoAggregateType<T extends FavoritoAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorito[P]>
      : GetScalarType<T[P], AggregateFavorito[P]>
  }




  export type FavoritoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritoWhereInput
    orderBy?: FavoritoOrderByWithAggregationInput | FavoritoOrderByWithAggregationInput[]
    by: FavoritoScalarFieldEnum[] | FavoritoScalarFieldEnum
    having?: FavoritoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritoCountAggregateInputType | true
    _min?: FavoritoMinAggregateInputType
    _max?: FavoritoMaxAggregateInputType
  }

  export type FavoritoGroupByOutputType = {
    id: string
    idJogo: string
    idUsuario: string
    _count: FavoritoCountAggregateOutputType | null
    _min: FavoritoMinAggregateOutputType | null
    _max: FavoritoMaxAggregateOutputType | null
  }

  type GetFavoritoGroupByPayload<T extends FavoritoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritoGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritoGroupByOutputType[P]>
        }
      >
    >


  export type FavoritoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idJogo?: boolean
    idUsuario?: boolean
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorito"]>

  export type FavoritoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    idJogo?: boolean
    idUsuario?: boolean
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorito"]>

  export type FavoritoSelectScalar = {
    id?: boolean
    idJogo?: boolean
    idUsuario?: boolean
  }

  export type FavoritoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type FavoritoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jogo?: boolean | JogoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $FavoritoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorito"
    objects: {
      jogo: Prisma.$JogoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      idJogo: string
      idUsuario: string
    }, ExtArgs["result"]["favorito"]>
    composites: {}
  }

  type FavoritoGetPayload<S extends boolean | null | undefined | FavoritoDefaultArgs> = $Result.GetResult<Prisma.$FavoritoPayload, S>

  type FavoritoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FavoritoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FavoritoCountAggregateInputType | true
    }

  export interface FavoritoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorito'], meta: { name: 'Favorito' } }
    /**
     * Find zero or one Favorito that matches the filter.
     * @param {FavoritoFindUniqueArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoritoFindUniqueArgs>(args: SelectSubset<T, FavoritoFindUniqueArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Favorito that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FavoritoFindUniqueOrThrowArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoritoFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoritoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Favorito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindFirstArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoritoFindFirstArgs>(args?: SelectSubset<T, FavoritoFindFirstArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Favorito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindFirstOrThrowArgs} args - Arguments to find a Favorito
     * @example
     * // Get one Favorito
     * const favorito = await prisma.favorito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoritoFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoritoFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoritos
     * const favoritos = await prisma.favorito.findMany()
     * 
     * // Get first 10 Favoritos
     * const favoritos = await prisma.favorito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoritoWithIdOnly = await prisma.favorito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoritoFindManyArgs>(args?: SelectSubset<T, FavoritoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Favorito.
     * @param {FavoritoCreateArgs} args - Arguments to create a Favorito.
     * @example
     * // Create one Favorito
     * const Favorito = await prisma.favorito.create({
     *   data: {
     *     // ... data to create a Favorito
     *   }
     * })
     * 
     */
    create<T extends FavoritoCreateArgs>(args: SelectSubset<T, FavoritoCreateArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Favoritos.
     * @param {FavoritoCreateManyArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favorito = await prisma.favorito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoritoCreateManyArgs>(args?: SelectSubset<T, FavoritoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favoritos and returns the data saved in the database.
     * @param {FavoritoCreateManyAndReturnArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favorito = await prisma.favorito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favoritos and only return the `id`
     * const favoritoWithIdOnly = await prisma.favorito.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoritoCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoritoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Favorito.
     * @param {FavoritoDeleteArgs} args - Arguments to delete one Favorito.
     * @example
     * // Delete one Favorito
     * const Favorito = await prisma.favorito.delete({
     *   where: {
     *     // ... filter to delete one Favorito
     *   }
     * })
     * 
     */
    delete<T extends FavoritoDeleteArgs>(args: SelectSubset<T, FavoritoDeleteArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Favorito.
     * @param {FavoritoUpdateArgs} args - Arguments to update one Favorito.
     * @example
     * // Update one Favorito
     * const favorito = await prisma.favorito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoritoUpdateArgs>(args: SelectSubset<T, FavoritoUpdateArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Favoritos.
     * @param {FavoritoDeleteManyArgs} args - Arguments to filter Favoritos to delete.
     * @example
     * // Delete a few Favoritos
     * const { count } = await prisma.favorito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoritoDeleteManyArgs>(args?: SelectSubset<T, FavoritoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoritos
     * const favorito = await prisma.favorito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoritoUpdateManyArgs>(args: SelectSubset<T, FavoritoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Favorito.
     * @param {FavoritoUpsertArgs} args - Arguments to update or create a Favorito.
     * @example
     * // Update or create a Favorito
     * const favorito = await prisma.favorito.upsert({
     *   create: {
     *     // ... data to create a Favorito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorito we want to update
     *   }
     * })
     */
    upsert<T extends FavoritoUpsertArgs>(args: SelectSubset<T, FavoritoUpsertArgs<ExtArgs>>): Prisma__FavoritoClient<$Result.GetResult<Prisma.$FavoritoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoCountArgs} args - Arguments to filter Favoritos to count.
     * @example
     * // Count the number of Favoritos
     * const count = await prisma.favorito.count({
     *   where: {
     *     // ... the filter for the Favoritos we want to count
     *   }
     * })
    **/
    count<T extends FavoritoCountArgs>(
      args?: Subset<T, FavoritoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritoAggregateArgs>(args: Subset<T, FavoritoAggregateArgs>): Prisma.PrismaPromise<GetFavoritoAggregateType<T>>

    /**
     * Group by Favorito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoritoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoritoGroupByArgs['orderBy'] }
        : { orderBy?: FavoritoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoritoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorito model
   */
  readonly fields: FavoritoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoritoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    jogo<T extends JogoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JogoDefaultArgs<ExtArgs>>): Prisma__JogoClient<$Result.GetResult<Prisma.$JogoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favorito model
   */ 
  interface FavoritoFieldRefs {
    readonly id: FieldRef<"Favorito", 'String'>
    readonly idJogo: FieldRef<"Favorito", 'String'>
    readonly idUsuario: FieldRef<"Favorito", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Favorito findUnique
   */
  export type FavoritoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito findUniqueOrThrow
   */
  export type FavoritoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito findFirst
   */
  export type FavoritoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito findFirstOrThrow
   */
  export type FavoritoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favorito to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito findMany
   */
  export type FavoritoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritoOrderByWithRelationInput | FavoritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favoritos.
     */
    cursor?: FavoritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    distinct?: FavoritoScalarFieldEnum | FavoritoScalarFieldEnum[]
  }

  /**
   * Favorito create
   */
  export type FavoritoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The data needed to create a Favorito.
     */
    data: XOR<FavoritoCreateInput, FavoritoUncheckedCreateInput>
  }

  /**
   * Favorito createMany
   */
  export type FavoritoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritoCreateManyInput | FavoritoCreateManyInput[]
  }

  /**
   * Favorito createManyAndReturn
   */
  export type FavoritoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritoCreateManyInput | FavoritoCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorito update
   */
  export type FavoritoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The data needed to update a Favorito.
     */
    data: XOR<FavoritoUpdateInput, FavoritoUncheckedUpdateInput>
    /**
     * Choose, which Favorito to update.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito updateMany
   */
  export type FavoritoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favoritos.
     */
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyInput>
    /**
     * Filter which Favoritos to update
     */
    where?: FavoritoWhereInput
  }

  /**
   * Favorito upsert
   */
  export type FavoritoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * The filter to search for the Favorito to update in case it exists.
     */
    where: FavoritoWhereUniqueInput
    /**
     * In case the Favorito found by the `where` argument doesn't exist, create a new Favorito with this data.
     */
    create: XOR<FavoritoCreateInput, FavoritoUncheckedCreateInput>
    /**
     * In case the Favorito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoritoUpdateInput, FavoritoUncheckedUpdateInput>
  }

  /**
   * Favorito delete
   */
  export type FavoritoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
    /**
     * Filter which Favorito to delete.
     */
    where: FavoritoWhereUniqueInput
  }

  /**
   * Favorito deleteMany
   */
  export type FavoritoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoritos to delete
     */
    where?: FavoritoWhereInput
  }

  /**
   * Favorito without action
   */
  export type FavoritoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorito
     */
    select?: FavoritoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritoInclude<ExtArgs> | null
  }


  /**
   * Model MensagemChat
   */

  export type AggregateMensagemChat = {
    _count: MensagemChatCountAggregateOutputType | null
    _min: MensagemChatMinAggregateOutputType | null
    _max: MensagemChatMaxAggregateOutputType | null
  }

  export type MensagemChatMinAggregateOutputType = {
    id: string | null
    conteudo: string | null
    urlImagem: string | null
    ehConvidado: boolean | null
    nomeConvidado: string | null
    idUsuario: string | null
    dataCriacao: Date | null
  }

  export type MensagemChatMaxAggregateOutputType = {
    id: string | null
    conteudo: string | null
    urlImagem: string | null
    ehConvidado: boolean | null
    nomeConvidado: string | null
    idUsuario: string | null
    dataCriacao: Date | null
  }

  export type MensagemChatCountAggregateOutputType = {
    id: number
    conteudo: number
    urlImagem: number
    ehConvidado: number
    nomeConvidado: number
    idUsuario: number
    dataCriacao: number
    _all: number
  }


  export type MensagemChatMinAggregateInputType = {
    id?: true
    conteudo?: true
    urlImagem?: true
    ehConvidado?: true
    nomeConvidado?: true
    idUsuario?: true
    dataCriacao?: true
  }

  export type MensagemChatMaxAggregateInputType = {
    id?: true
    conteudo?: true
    urlImagem?: true
    ehConvidado?: true
    nomeConvidado?: true
    idUsuario?: true
    dataCriacao?: true
  }

  export type MensagemChatCountAggregateInputType = {
    id?: true
    conteudo?: true
    urlImagem?: true
    ehConvidado?: true
    nomeConvidado?: true
    idUsuario?: true
    dataCriacao?: true
    _all?: true
  }

  export type MensagemChatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MensagemChat to aggregate.
     */
    where?: MensagemChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MensagemChats to fetch.
     */
    orderBy?: MensagemChatOrderByWithRelationInput | MensagemChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MensagemChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MensagemChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MensagemChats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MensagemChats
    **/
    _count?: true | MensagemChatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MensagemChatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MensagemChatMaxAggregateInputType
  }

  export type GetMensagemChatAggregateType<T extends MensagemChatAggregateArgs> = {
        [P in keyof T & keyof AggregateMensagemChat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMensagemChat[P]>
      : GetScalarType<T[P], AggregateMensagemChat[P]>
  }




  export type MensagemChatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensagemChatWhereInput
    orderBy?: MensagemChatOrderByWithAggregationInput | MensagemChatOrderByWithAggregationInput[]
    by: MensagemChatScalarFieldEnum[] | MensagemChatScalarFieldEnum
    having?: MensagemChatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MensagemChatCountAggregateInputType | true
    _min?: MensagemChatMinAggregateInputType
    _max?: MensagemChatMaxAggregateInputType
  }

  export type MensagemChatGroupByOutputType = {
    id: string
    conteudo: string
    urlImagem: string | null
    ehConvidado: boolean
    nomeConvidado: string | null
    idUsuario: string | null
    dataCriacao: Date
    _count: MensagemChatCountAggregateOutputType | null
    _min: MensagemChatMinAggregateOutputType | null
    _max: MensagemChatMaxAggregateOutputType | null
  }

  type GetMensagemChatGroupByPayload<T extends MensagemChatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MensagemChatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MensagemChatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MensagemChatGroupByOutputType[P]>
            : GetScalarType<T[P], MensagemChatGroupByOutputType[P]>
        }
      >
    >


  export type MensagemChatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conteudo?: boolean
    urlImagem?: boolean
    ehConvidado?: boolean
    nomeConvidado?: boolean
    idUsuario?: boolean
    dataCriacao?: boolean
    usuario?: boolean | MensagemChat$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["mensagemChat"]>

  export type MensagemChatSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conteudo?: boolean
    urlImagem?: boolean
    ehConvidado?: boolean
    nomeConvidado?: boolean
    idUsuario?: boolean
    dataCriacao?: boolean
    usuario?: boolean | MensagemChat$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["mensagemChat"]>

  export type MensagemChatSelectScalar = {
    id?: boolean
    conteudo?: boolean
    urlImagem?: boolean
    ehConvidado?: boolean
    nomeConvidado?: boolean
    idUsuario?: boolean
    dataCriacao?: boolean
  }

  export type MensagemChatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | MensagemChat$usuarioArgs<ExtArgs>
  }
  export type MensagemChatIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | MensagemChat$usuarioArgs<ExtArgs>
  }

  export type $MensagemChatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MensagemChat"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      conteudo: string
      urlImagem: string | null
      ehConvidado: boolean
      nomeConvidado: string | null
      idUsuario: string | null
      dataCriacao: Date
    }, ExtArgs["result"]["mensagemChat"]>
    composites: {}
  }

  type MensagemChatGetPayload<S extends boolean | null | undefined | MensagemChatDefaultArgs> = $Result.GetResult<Prisma.$MensagemChatPayload, S>

  type MensagemChatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MensagemChatFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MensagemChatCountAggregateInputType | true
    }

  export interface MensagemChatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MensagemChat'], meta: { name: 'MensagemChat' } }
    /**
     * Find zero or one MensagemChat that matches the filter.
     * @param {MensagemChatFindUniqueArgs} args - Arguments to find a MensagemChat
     * @example
     * // Get one MensagemChat
     * const mensagemChat = await prisma.mensagemChat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MensagemChatFindUniqueArgs>(args: SelectSubset<T, MensagemChatFindUniqueArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MensagemChat that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MensagemChatFindUniqueOrThrowArgs} args - Arguments to find a MensagemChat
     * @example
     * // Get one MensagemChat
     * const mensagemChat = await prisma.mensagemChat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MensagemChatFindUniqueOrThrowArgs>(args: SelectSubset<T, MensagemChatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MensagemChat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensagemChatFindFirstArgs} args - Arguments to find a MensagemChat
     * @example
     * // Get one MensagemChat
     * const mensagemChat = await prisma.mensagemChat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MensagemChatFindFirstArgs>(args?: SelectSubset<T, MensagemChatFindFirstArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MensagemChat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensagemChatFindFirstOrThrowArgs} args - Arguments to find a MensagemChat
     * @example
     * // Get one MensagemChat
     * const mensagemChat = await prisma.mensagemChat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MensagemChatFindFirstOrThrowArgs>(args?: SelectSubset<T, MensagemChatFindFirstOrThrowArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MensagemChats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensagemChatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MensagemChats
     * const mensagemChats = await prisma.mensagemChat.findMany()
     * 
     * // Get first 10 MensagemChats
     * const mensagemChats = await prisma.mensagemChat.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mensagemChatWithIdOnly = await prisma.mensagemChat.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MensagemChatFindManyArgs>(args?: SelectSubset<T, MensagemChatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MensagemChat.
     * @param {MensagemChatCreateArgs} args - Arguments to create a MensagemChat.
     * @example
     * // Create one MensagemChat
     * const MensagemChat = await prisma.mensagemChat.create({
     *   data: {
     *     // ... data to create a MensagemChat
     *   }
     * })
     * 
     */
    create<T extends MensagemChatCreateArgs>(args: SelectSubset<T, MensagemChatCreateArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MensagemChats.
     * @param {MensagemChatCreateManyArgs} args - Arguments to create many MensagemChats.
     * @example
     * // Create many MensagemChats
     * const mensagemChat = await prisma.mensagemChat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MensagemChatCreateManyArgs>(args?: SelectSubset<T, MensagemChatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MensagemChats and returns the data saved in the database.
     * @param {MensagemChatCreateManyAndReturnArgs} args - Arguments to create many MensagemChats.
     * @example
     * // Create many MensagemChats
     * const mensagemChat = await prisma.mensagemChat.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MensagemChats and only return the `id`
     * const mensagemChatWithIdOnly = await prisma.mensagemChat.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MensagemChatCreateManyAndReturnArgs>(args?: SelectSubset<T, MensagemChatCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MensagemChat.
     * @param {MensagemChatDeleteArgs} args - Arguments to delete one MensagemChat.
     * @example
     * // Delete one MensagemChat
     * const MensagemChat = await prisma.mensagemChat.delete({
     *   where: {
     *     // ... filter to delete one MensagemChat
     *   }
     * })
     * 
     */
    delete<T extends MensagemChatDeleteArgs>(args: SelectSubset<T, MensagemChatDeleteArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MensagemChat.
     * @param {MensagemChatUpdateArgs} args - Arguments to update one MensagemChat.
     * @example
     * // Update one MensagemChat
     * const mensagemChat = await prisma.mensagemChat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MensagemChatUpdateArgs>(args: SelectSubset<T, MensagemChatUpdateArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MensagemChats.
     * @param {MensagemChatDeleteManyArgs} args - Arguments to filter MensagemChats to delete.
     * @example
     * // Delete a few MensagemChats
     * const { count } = await prisma.mensagemChat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MensagemChatDeleteManyArgs>(args?: SelectSubset<T, MensagemChatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MensagemChats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensagemChatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MensagemChats
     * const mensagemChat = await prisma.mensagemChat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MensagemChatUpdateManyArgs>(args: SelectSubset<T, MensagemChatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MensagemChat.
     * @param {MensagemChatUpsertArgs} args - Arguments to update or create a MensagemChat.
     * @example
     * // Update or create a MensagemChat
     * const mensagemChat = await prisma.mensagemChat.upsert({
     *   create: {
     *     // ... data to create a MensagemChat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MensagemChat we want to update
     *   }
     * })
     */
    upsert<T extends MensagemChatUpsertArgs>(args: SelectSubset<T, MensagemChatUpsertArgs<ExtArgs>>): Prisma__MensagemChatClient<$Result.GetResult<Prisma.$MensagemChatPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MensagemChats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensagemChatCountArgs} args - Arguments to filter MensagemChats to count.
     * @example
     * // Count the number of MensagemChats
     * const count = await prisma.mensagemChat.count({
     *   where: {
     *     // ... the filter for the MensagemChats we want to count
     *   }
     * })
    **/
    count<T extends MensagemChatCountArgs>(
      args?: Subset<T, MensagemChatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MensagemChatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MensagemChat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensagemChatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MensagemChatAggregateArgs>(args: Subset<T, MensagemChatAggregateArgs>): Prisma.PrismaPromise<GetMensagemChatAggregateType<T>>

    /**
     * Group by MensagemChat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensagemChatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MensagemChatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MensagemChatGroupByArgs['orderBy'] }
        : { orderBy?: MensagemChatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MensagemChatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMensagemChatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MensagemChat model
   */
  readonly fields: MensagemChatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MensagemChat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MensagemChatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends MensagemChat$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, MensagemChat$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MensagemChat model
   */ 
  interface MensagemChatFieldRefs {
    readonly id: FieldRef<"MensagemChat", 'String'>
    readonly conteudo: FieldRef<"MensagemChat", 'String'>
    readonly urlImagem: FieldRef<"MensagemChat", 'String'>
    readonly ehConvidado: FieldRef<"MensagemChat", 'Boolean'>
    readonly nomeConvidado: FieldRef<"MensagemChat", 'String'>
    readonly idUsuario: FieldRef<"MensagemChat", 'String'>
    readonly dataCriacao: FieldRef<"MensagemChat", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MensagemChat findUnique
   */
  export type MensagemChatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * Filter, which MensagemChat to fetch.
     */
    where: MensagemChatWhereUniqueInput
  }

  /**
   * MensagemChat findUniqueOrThrow
   */
  export type MensagemChatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * Filter, which MensagemChat to fetch.
     */
    where: MensagemChatWhereUniqueInput
  }

  /**
   * MensagemChat findFirst
   */
  export type MensagemChatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * Filter, which MensagemChat to fetch.
     */
    where?: MensagemChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MensagemChats to fetch.
     */
    orderBy?: MensagemChatOrderByWithRelationInput | MensagemChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MensagemChats.
     */
    cursor?: MensagemChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MensagemChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MensagemChats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MensagemChats.
     */
    distinct?: MensagemChatScalarFieldEnum | MensagemChatScalarFieldEnum[]
  }

  /**
   * MensagemChat findFirstOrThrow
   */
  export type MensagemChatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * Filter, which MensagemChat to fetch.
     */
    where?: MensagemChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MensagemChats to fetch.
     */
    orderBy?: MensagemChatOrderByWithRelationInput | MensagemChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MensagemChats.
     */
    cursor?: MensagemChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MensagemChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MensagemChats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MensagemChats.
     */
    distinct?: MensagemChatScalarFieldEnum | MensagemChatScalarFieldEnum[]
  }

  /**
   * MensagemChat findMany
   */
  export type MensagemChatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * Filter, which MensagemChats to fetch.
     */
    where?: MensagemChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MensagemChats to fetch.
     */
    orderBy?: MensagemChatOrderByWithRelationInput | MensagemChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MensagemChats.
     */
    cursor?: MensagemChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MensagemChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MensagemChats.
     */
    skip?: number
    distinct?: MensagemChatScalarFieldEnum | MensagemChatScalarFieldEnum[]
  }

  /**
   * MensagemChat create
   */
  export type MensagemChatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * The data needed to create a MensagemChat.
     */
    data: XOR<MensagemChatCreateInput, MensagemChatUncheckedCreateInput>
  }

  /**
   * MensagemChat createMany
   */
  export type MensagemChatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MensagemChats.
     */
    data: MensagemChatCreateManyInput | MensagemChatCreateManyInput[]
  }

  /**
   * MensagemChat createManyAndReturn
   */
  export type MensagemChatCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MensagemChats.
     */
    data: MensagemChatCreateManyInput | MensagemChatCreateManyInput[]
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MensagemChat update
   */
  export type MensagemChatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * The data needed to update a MensagemChat.
     */
    data: XOR<MensagemChatUpdateInput, MensagemChatUncheckedUpdateInput>
    /**
     * Choose, which MensagemChat to update.
     */
    where: MensagemChatWhereUniqueInput
  }

  /**
   * MensagemChat updateMany
   */
  export type MensagemChatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MensagemChats.
     */
    data: XOR<MensagemChatUpdateManyMutationInput, MensagemChatUncheckedUpdateManyInput>
    /**
     * Filter which MensagemChats to update
     */
    where?: MensagemChatWhereInput
  }

  /**
   * MensagemChat upsert
   */
  export type MensagemChatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * The filter to search for the MensagemChat to update in case it exists.
     */
    where: MensagemChatWhereUniqueInput
    /**
     * In case the MensagemChat found by the `where` argument doesn't exist, create a new MensagemChat with this data.
     */
    create: XOR<MensagemChatCreateInput, MensagemChatUncheckedCreateInput>
    /**
     * In case the MensagemChat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MensagemChatUpdateInput, MensagemChatUncheckedUpdateInput>
  }

  /**
   * MensagemChat delete
   */
  export type MensagemChatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
    /**
     * Filter which MensagemChat to delete.
     */
    where: MensagemChatWhereUniqueInput
  }

  /**
   * MensagemChat deleteMany
   */
  export type MensagemChatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MensagemChats to delete
     */
    where?: MensagemChatWhereInput
  }

  /**
   * MensagemChat.usuario
   */
  export type MensagemChat$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * MensagemChat without action
   */
  export type MensagemChatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MensagemChat
     */
    select?: MensagemChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensagemChatInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    handle: 'handle',
    imagem: 'imagem',
    ehAdmin: 'ehAdmin',
    bio: 'bio',
    dataCriacao: 'dataCriacao',
    dataAtualizacao: 'dataAtualizacao'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const JogoScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descricao: 'descricao',
    urlImagem: 'urlImagem',
    desenvolvedor: 'desenvolvedor',
    versao: 'versao',
    engine: 'engine',
    idioma: 'idioma',
    avaliacao: 'avaliacao',
    tags: 'tags',
    urlDownload: 'urlDownload',
    urlDownloadWindows: 'urlDownloadWindows',
    urlDownloadAndroid: 'urlDownloadAndroid',
    urlDownloadLinux: 'urlDownloadLinux',
    urlDownloadMac: 'urlDownloadMac',
    censurado: 'censurado',
    instalacao: 'instalacao',
    changelog: 'changelog',
    notasDev: 'notasDev',
    dataLancamento: 'dataLancamento',
    dataCriacao: 'dataCriacao',
    dataAtualizacao: 'dataAtualizacao',
    osWindows: 'osWindows',
    osAndroid: 'osAndroid',
    osLinux: 'osLinux',
    osMac: 'osMac'
  };

  export type JogoScalarFieldEnum = (typeof JogoScalarFieldEnum)[keyof typeof JogoScalarFieldEnum]


  export const ImagemJogoScalarFieldEnum: {
    id: 'id',
    idJogo: 'idJogo',
    urlImagem: 'urlImagem'
  };

  export type ImagemJogoScalarFieldEnum = (typeof ImagemJogoScalarFieldEnum)[keyof typeof ImagemJogoScalarFieldEnum]


  export const ComentarioScalarFieldEnum: {
    id: 'id',
    conteudo: 'conteudo',
    curtidas: 'curtidas',
    idJogo: 'idJogo',
    idUsuario: 'idUsuario',
    dataCriacao: 'dataCriacao',
    dataAtualizacao: 'dataAtualizacao'
  };

  export type ComentarioScalarFieldEnum = (typeof ComentarioScalarFieldEnum)[keyof typeof ComentarioScalarFieldEnum]


  export const FavoritoScalarFieldEnum: {
    id: 'id',
    idJogo: 'idJogo',
    idUsuario: 'idUsuario'
  };

  export type FavoritoScalarFieldEnum = (typeof FavoritoScalarFieldEnum)[keyof typeof FavoritoScalarFieldEnum]


  export const MensagemChatScalarFieldEnum: {
    id: 'id',
    conteudo: 'conteudo',
    urlImagem: 'urlImagem',
    ehConvidado: 'ehConvidado',
    nomeConvidado: 'nomeConvidado',
    idUsuario: 'idUsuario',
    dataCriacao: 'dataCriacao'
  };

  export type MensagemChatScalarFieldEnum = (typeof MensagemChatScalarFieldEnum)[keyof typeof MensagemChatScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: StringFilter<"Usuario"> | string
    nome?: StringNullableFilter<"Usuario"> | string | null
    handle?: StringNullableFilter<"Usuario"> | string | null
    imagem?: StringNullableFilter<"Usuario"> | string | null
    ehAdmin?: BoolFilter<"Usuario"> | boolean
    bio?: StringNullableFilter<"Usuario"> | string | null
    dataCriacao?: DateTimeFilter<"Usuario"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Usuario"> | Date | string
    comentarios?: ComentarioListRelationFilter
    favoritos?: FavoritoListRelationFilter
    mensagensChat?: MensagemChatListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    handle?: SortOrderInput | SortOrder
    imagem?: SortOrderInput | SortOrder
    ehAdmin?: SortOrder
    bio?: SortOrderInput | SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    comentarios?: ComentarioOrderByRelationAggregateInput
    favoritos?: FavoritoOrderByRelationAggregateInput
    mensagensChat?: MensagemChatOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringNullableFilter<"Usuario"> | string | null
    handle?: StringNullableFilter<"Usuario"> | string | null
    imagem?: StringNullableFilter<"Usuario"> | string | null
    ehAdmin?: BoolFilter<"Usuario"> | boolean
    bio?: StringNullableFilter<"Usuario"> | string | null
    dataCriacao?: DateTimeFilter<"Usuario"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Usuario"> | Date | string
    comentarios?: ComentarioListRelationFilter
    favoritos?: FavoritoListRelationFilter
    mensagensChat?: MensagemChatListRelationFilter
  }, "id">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    handle?: SortOrderInput | SortOrder
    imagem?: SortOrderInput | SortOrder
    ehAdmin?: SortOrder
    bio?: SortOrderInput | SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Usuario"> | string
    nome?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    handle?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    imagem?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    ehAdmin?: BoolWithAggregatesFilter<"Usuario"> | boolean
    bio?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    dataCriacao?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    dataAtualizacao?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
  }

  export type JogoWhereInput = {
    AND?: JogoWhereInput | JogoWhereInput[]
    OR?: JogoWhereInput[]
    NOT?: JogoWhereInput | JogoWhereInput[]
    id?: StringFilter<"Jogo"> | string
    titulo?: StringFilter<"Jogo"> | string
    descricao?: StringFilter<"Jogo"> | string
    urlImagem?: StringFilter<"Jogo"> | string
    desenvolvedor?: StringFilter<"Jogo"> | string
    versao?: StringFilter<"Jogo"> | string
    engine?: StringFilter<"Jogo"> | string
    idioma?: StringFilter<"Jogo"> | string
    avaliacao?: FloatFilter<"Jogo"> | number
    tags?: StringFilter<"Jogo"> | string
    urlDownload?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadWindows?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadAndroid?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadLinux?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadMac?: StringNullableFilter<"Jogo"> | string | null
    censurado?: BoolFilter<"Jogo"> | boolean
    instalacao?: StringFilter<"Jogo"> | string
    changelog?: StringFilter<"Jogo"> | string
    notasDev?: StringNullableFilter<"Jogo"> | string | null
    dataLancamento?: DateTimeFilter<"Jogo"> | Date | string
    dataCriacao?: DateTimeFilter<"Jogo"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Jogo"> | Date | string
    osWindows?: BoolFilter<"Jogo"> | boolean
    osAndroid?: BoolFilter<"Jogo"> | boolean
    osLinux?: BoolFilter<"Jogo"> | boolean
    osMac?: BoolFilter<"Jogo"> | boolean
    imagens?: ImagemJogoListRelationFilter
    comentarios?: ComentarioListRelationFilter
    favoritos?: FavoritoListRelationFilter
  }

  export type JogoOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    urlImagem?: SortOrder
    desenvolvedor?: SortOrder
    versao?: SortOrder
    engine?: SortOrder
    idioma?: SortOrder
    avaliacao?: SortOrder
    tags?: SortOrder
    urlDownload?: SortOrderInput | SortOrder
    urlDownloadWindows?: SortOrderInput | SortOrder
    urlDownloadAndroid?: SortOrderInput | SortOrder
    urlDownloadLinux?: SortOrderInput | SortOrder
    urlDownloadMac?: SortOrderInput | SortOrder
    censurado?: SortOrder
    instalacao?: SortOrder
    changelog?: SortOrder
    notasDev?: SortOrderInput | SortOrder
    dataLancamento?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    osWindows?: SortOrder
    osAndroid?: SortOrder
    osLinux?: SortOrder
    osMac?: SortOrder
    imagens?: ImagemJogoOrderByRelationAggregateInput
    comentarios?: ComentarioOrderByRelationAggregateInput
    favoritos?: FavoritoOrderByRelationAggregateInput
  }

  export type JogoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JogoWhereInput | JogoWhereInput[]
    OR?: JogoWhereInput[]
    NOT?: JogoWhereInput | JogoWhereInput[]
    titulo?: StringFilter<"Jogo"> | string
    descricao?: StringFilter<"Jogo"> | string
    urlImagem?: StringFilter<"Jogo"> | string
    desenvolvedor?: StringFilter<"Jogo"> | string
    versao?: StringFilter<"Jogo"> | string
    engine?: StringFilter<"Jogo"> | string
    idioma?: StringFilter<"Jogo"> | string
    avaliacao?: FloatFilter<"Jogo"> | number
    tags?: StringFilter<"Jogo"> | string
    urlDownload?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadWindows?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadAndroid?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadLinux?: StringNullableFilter<"Jogo"> | string | null
    urlDownloadMac?: StringNullableFilter<"Jogo"> | string | null
    censurado?: BoolFilter<"Jogo"> | boolean
    instalacao?: StringFilter<"Jogo"> | string
    changelog?: StringFilter<"Jogo"> | string
    notasDev?: StringNullableFilter<"Jogo"> | string | null
    dataLancamento?: DateTimeFilter<"Jogo"> | Date | string
    dataCriacao?: DateTimeFilter<"Jogo"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Jogo"> | Date | string
    osWindows?: BoolFilter<"Jogo"> | boolean
    osAndroid?: BoolFilter<"Jogo"> | boolean
    osLinux?: BoolFilter<"Jogo"> | boolean
    osMac?: BoolFilter<"Jogo"> | boolean
    imagens?: ImagemJogoListRelationFilter
    comentarios?: ComentarioListRelationFilter
    favoritos?: FavoritoListRelationFilter
  }, "id">

  export type JogoOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    urlImagem?: SortOrder
    desenvolvedor?: SortOrder
    versao?: SortOrder
    engine?: SortOrder
    idioma?: SortOrder
    avaliacao?: SortOrder
    tags?: SortOrder
    urlDownload?: SortOrderInput | SortOrder
    urlDownloadWindows?: SortOrderInput | SortOrder
    urlDownloadAndroid?: SortOrderInput | SortOrder
    urlDownloadLinux?: SortOrderInput | SortOrder
    urlDownloadMac?: SortOrderInput | SortOrder
    censurado?: SortOrder
    instalacao?: SortOrder
    changelog?: SortOrder
    notasDev?: SortOrderInput | SortOrder
    dataLancamento?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    osWindows?: SortOrder
    osAndroid?: SortOrder
    osLinux?: SortOrder
    osMac?: SortOrder
    _count?: JogoCountOrderByAggregateInput
    _avg?: JogoAvgOrderByAggregateInput
    _max?: JogoMaxOrderByAggregateInput
    _min?: JogoMinOrderByAggregateInput
    _sum?: JogoSumOrderByAggregateInput
  }

  export type JogoScalarWhereWithAggregatesInput = {
    AND?: JogoScalarWhereWithAggregatesInput | JogoScalarWhereWithAggregatesInput[]
    OR?: JogoScalarWhereWithAggregatesInput[]
    NOT?: JogoScalarWhereWithAggregatesInput | JogoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Jogo"> | string
    titulo?: StringWithAggregatesFilter<"Jogo"> | string
    descricao?: StringWithAggregatesFilter<"Jogo"> | string
    urlImagem?: StringWithAggregatesFilter<"Jogo"> | string
    desenvolvedor?: StringWithAggregatesFilter<"Jogo"> | string
    versao?: StringWithAggregatesFilter<"Jogo"> | string
    engine?: StringWithAggregatesFilter<"Jogo"> | string
    idioma?: StringWithAggregatesFilter<"Jogo"> | string
    avaliacao?: FloatWithAggregatesFilter<"Jogo"> | number
    tags?: StringWithAggregatesFilter<"Jogo"> | string
    urlDownload?: StringNullableWithAggregatesFilter<"Jogo"> | string | null
    urlDownloadWindows?: StringNullableWithAggregatesFilter<"Jogo"> | string | null
    urlDownloadAndroid?: StringNullableWithAggregatesFilter<"Jogo"> | string | null
    urlDownloadLinux?: StringNullableWithAggregatesFilter<"Jogo"> | string | null
    urlDownloadMac?: StringNullableWithAggregatesFilter<"Jogo"> | string | null
    censurado?: BoolWithAggregatesFilter<"Jogo"> | boolean
    instalacao?: StringWithAggregatesFilter<"Jogo"> | string
    changelog?: StringWithAggregatesFilter<"Jogo"> | string
    notasDev?: StringNullableWithAggregatesFilter<"Jogo"> | string | null
    dataLancamento?: DateTimeWithAggregatesFilter<"Jogo"> | Date | string
    dataCriacao?: DateTimeWithAggregatesFilter<"Jogo"> | Date | string
    dataAtualizacao?: DateTimeWithAggregatesFilter<"Jogo"> | Date | string
    osWindows?: BoolWithAggregatesFilter<"Jogo"> | boolean
    osAndroid?: BoolWithAggregatesFilter<"Jogo"> | boolean
    osLinux?: BoolWithAggregatesFilter<"Jogo"> | boolean
    osMac?: BoolWithAggregatesFilter<"Jogo"> | boolean
  }

  export type ImagemJogoWhereInput = {
    AND?: ImagemJogoWhereInput | ImagemJogoWhereInput[]
    OR?: ImagemJogoWhereInput[]
    NOT?: ImagemJogoWhereInput | ImagemJogoWhereInput[]
    id?: StringFilter<"ImagemJogo"> | string
    idJogo?: StringFilter<"ImagemJogo"> | string
    urlImagem?: StringFilter<"ImagemJogo"> | string
    jogo?: XOR<JogoRelationFilter, JogoWhereInput>
  }

  export type ImagemJogoOrderByWithRelationInput = {
    id?: SortOrder
    idJogo?: SortOrder
    urlImagem?: SortOrder
    jogo?: JogoOrderByWithRelationInput
  }

  export type ImagemJogoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ImagemJogoWhereInput | ImagemJogoWhereInput[]
    OR?: ImagemJogoWhereInput[]
    NOT?: ImagemJogoWhereInput | ImagemJogoWhereInput[]
    idJogo?: StringFilter<"ImagemJogo"> | string
    urlImagem?: StringFilter<"ImagemJogo"> | string
    jogo?: XOR<JogoRelationFilter, JogoWhereInput>
  }, "id">

  export type ImagemJogoOrderByWithAggregationInput = {
    id?: SortOrder
    idJogo?: SortOrder
    urlImagem?: SortOrder
    _count?: ImagemJogoCountOrderByAggregateInput
    _max?: ImagemJogoMaxOrderByAggregateInput
    _min?: ImagemJogoMinOrderByAggregateInput
  }

  export type ImagemJogoScalarWhereWithAggregatesInput = {
    AND?: ImagemJogoScalarWhereWithAggregatesInput | ImagemJogoScalarWhereWithAggregatesInput[]
    OR?: ImagemJogoScalarWhereWithAggregatesInput[]
    NOT?: ImagemJogoScalarWhereWithAggregatesInput | ImagemJogoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ImagemJogo"> | string
    idJogo?: StringWithAggregatesFilter<"ImagemJogo"> | string
    urlImagem?: StringWithAggregatesFilter<"ImagemJogo"> | string
  }

  export type ComentarioWhereInput = {
    AND?: ComentarioWhereInput | ComentarioWhereInput[]
    OR?: ComentarioWhereInput[]
    NOT?: ComentarioWhereInput | ComentarioWhereInput[]
    id?: StringFilter<"Comentario"> | string
    conteudo?: StringFilter<"Comentario"> | string
    curtidas?: IntFilter<"Comentario"> | number
    idJogo?: StringFilter<"Comentario"> | string
    idUsuario?: StringFilter<"Comentario"> | string
    dataCriacao?: DateTimeFilter<"Comentario"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Comentario"> | Date | string
    jogo?: XOR<JogoRelationFilter, JogoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type ComentarioOrderByWithRelationInput = {
    id?: SortOrder
    conteudo?: SortOrder
    curtidas?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    jogo?: JogoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type ComentarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ComentarioWhereInput | ComentarioWhereInput[]
    OR?: ComentarioWhereInput[]
    NOT?: ComentarioWhereInput | ComentarioWhereInput[]
    conteudo?: StringFilter<"Comentario"> | string
    curtidas?: IntFilter<"Comentario"> | number
    idJogo?: StringFilter<"Comentario"> | string
    idUsuario?: StringFilter<"Comentario"> | string
    dataCriacao?: DateTimeFilter<"Comentario"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Comentario"> | Date | string
    jogo?: XOR<JogoRelationFilter, JogoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type ComentarioOrderByWithAggregationInput = {
    id?: SortOrder
    conteudo?: SortOrder
    curtidas?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    _count?: ComentarioCountOrderByAggregateInput
    _avg?: ComentarioAvgOrderByAggregateInput
    _max?: ComentarioMaxOrderByAggregateInput
    _min?: ComentarioMinOrderByAggregateInput
    _sum?: ComentarioSumOrderByAggregateInput
  }

  export type ComentarioScalarWhereWithAggregatesInput = {
    AND?: ComentarioScalarWhereWithAggregatesInput | ComentarioScalarWhereWithAggregatesInput[]
    OR?: ComentarioScalarWhereWithAggregatesInput[]
    NOT?: ComentarioScalarWhereWithAggregatesInput | ComentarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Comentario"> | string
    conteudo?: StringWithAggregatesFilter<"Comentario"> | string
    curtidas?: IntWithAggregatesFilter<"Comentario"> | number
    idJogo?: StringWithAggregatesFilter<"Comentario"> | string
    idUsuario?: StringWithAggregatesFilter<"Comentario"> | string
    dataCriacao?: DateTimeWithAggregatesFilter<"Comentario"> | Date | string
    dataAtualizacao?: DateTimeWithAggregatesFilter<"Comentario"> | Date | string
  }

  export type FavoritoWhereInput = {
    AND?: FavoritoWhereInput | FavoritoWhereInput[]
    OR?: FavoritoWhereInput[]
    NOT?: FavoritoWhereInput | FavoritoWhereInput[]
    id?: StringFilter<"Favorito"> | string
    idJogo?: StringFilter<"Favorito"> | string
    idUsuario?: StringFilter<"Favorito"> | string
    jogo?: XOR<JogoRelationFilter, JogoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type FavoritoOrderByWithRelationInput = {
    id?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
    jogo?: JogoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type FavoritoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    idJogo_idUsuario?: FavoritoIdJogoIdUsuarioCompoundUniqueInput
    AND?: FavoritoWhereInput | FavoritoWhereInput[]
    OR?: FavoritoWhereInput[]
    NOT?: FavoritoWhereInput | FavoritoWhereInput[]
    idJogo?: StringFilter<"Favorito"> | string
    idUsuario?: StringFilter<"Favorito"> | string
    jogo?: XOR<JogoRelationFilter, JogoWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id" | "idJogo_idUsuario">

  export type FavoritoOrderByWithAggregationInput = {
    id?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
    _count?: FavoritoCountOrderByAggregateInput
    _max?: FavoritoMaxOrderByAggregateInput
    _min?: FavoritoMinOrderByAggregateInput
  }

  export type FavoritoScalarWhereWithAggregatesInput = {
    AND?: FavoritoScalarWhereWithAggregatesInput | FavoritoScalarWhereWithAggregatesInput[]
    OR?: FavoritoScalarWhereWithAggregatesInput[]
    NOT?: FavoritoScalarWhereWithAggregatesInput | FavoritoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Favorito"> | string
    idJogo?: StringWithAggregatesFilter<"Favorito"> | string
    idUsuario?: StringWithAggregatesFilter<"Favorito"> | string
  }

  export type MensagemChatWhereInput = {
    AND?: MensagemChatWhereInput | MensagemChatWhereInput[]
    OR?: MensagemChatWhereInput[]
    NOT?: MensagemChatWhereInput | MensagemChatWhereInput[]
    id?: StringFilter<"MensagemChat"> | string
    conteudo?: StringFilter<"MensagemChat"> | string
    urlImagem?: StringNullableFilter<"MensagemChat"> | string | null
    ehConvidado?: BoolFilter<"MensagemChat"> | boolean
    nomeConvidado?: StringNullableFilter<"MensagemChat"> | string | null
    idUsuario?: StringNullableFilter<"MensagemChat"> | string | null
    dataCriacao?: DateTimeFilter<"MensagemChat"> | Date | string
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type MensagemChatOrderByWithRelationInput = {
    id?: SortOrder
    conteudo?: SortOrder
    urlImagem?: SortOrderInput | SortOrder
    ehConvidado?: SortOrder
    nomeConvidado?: SortOrderInput | SortOrder
    idUsuario?: SortOrderInput | SortOrder
    dataCriacao?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type MensagemChatWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MensagemChatWhereInput | MensagemChatWhereInput[]
    OR?: MensagemChatWhereInput[]
    NOT?: MensagemChatWhereInput | MensagemChatWhereInput[]
    conteudo?: StringFilter<"MensagemChat"> | string
    urlImagem?: StringNullableFilter<"MensagemChat"> | string | null
    ehConvidado?: BoolFilter<"MensagemChat"> | boolean
    nomeConvidado?: StringNullableFilter<"MensagemChat"> | string | null
    idUsuario?: StringNullableFilter<"MensagemChat"> | string | null
    dataCriacao?: DateTimeFilter<"MensagemChat"> | Date | string
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type MensagemChatOrderByWithAggregationInput = {
    id?: SortOrder
    conteudo?: SortOrder
    urlImagem?: SortOrderInput | SortOrder
    ehConvidado?: SortOrder
    nomeConvidado?: SortOrderInput | SortOrder
    idUsuario?: SortOrderInput | SortOrder
    dataCriacao?: SortOrder
    _count?: MensagemChatCountOrderByAggregateInput
    _max?: MensagemChatMaxOrderByAggregateInput
    _min?: MensagemChatMinOrderByAggregateInput
  }

  export type MensagemChatScalarWhereWithAggregatesInput = {
    AND?: MensagemChatScalarWhereWithAggregatesInput | MensagemChatScalarWhereWithAggregatesInput[]
    OR?: MensagemChatScalarWhereWithAggregatesInput[]
    NOT?: MensagemChatScalarWhereWithAggregatesInput | MensagemChatScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MensagemChat"> | string
    conteudo?: StringWithAggregatesFilter<"MensagemChat"> | string
    urlImagem?: StringNullableWithAggregatesFilter<"MensagemChat"> | string | null
    ehConvidado?: BoolWithAggregatesFilter<"MensagemChat"> | boolean
    nomeConvidado?: StringNullableWithAggregatesFilter<"MensagemChat"> | string | null
    idUsuario?: StringNullableWithAggregatesFilter<"MensagemChat"> | string | null
    dataCriacao?: DateTimeWithAggregatesFilter<"MensagemChat"> | Date | string
  }

  export type UsuarioCreateInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    comentarios?: ComentarioCreateNestedManyWithoutUsuarioInput
    favoritos?: FavoritoCreateNestedManyWithoutUsuarioInput
    mensagensChat?: MensagemChatCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    comentarios?: ComentarioUncheckedCreateNestedManyWithoutUsuarioInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutUsuarioInput
    mensagensChat?: MensagemChatUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentarioUpdateManyWithoutUsuarioNestedInput
    favoritos?: FavoritoUpdateManyWithoutUsuarioNestedInput
    mensagensChat?: MensagemChatUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentarioUncheckedUpdateManyWithoutUsuarioNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutUsuarioNestedInput
    mensagensChat?: MensagemChatUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type UsuarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JogoCreateInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    imagens?: ImagemJogoCreateNestedManyWithoutJogoInput
    comentarios?: ComentarioCreateNestedManyWithoutJogoInput
    favoritos?: FavoritoCreateNestedManyWithoutJogoInput
  }

  export type JogoUncheckedCreateInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    imagens?: ImagemJogoUncheckedCreateNestedManyWithoutJogoInput
    comentarios?: ComentarioUncheckedCreateNestedManyWithoutJogoInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutJogoInput
  }

  export type JogoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    imagens?: ImagemJogoUpdateManyWithoutJogoNestedInput
    comentarios?: ComentarioUpdateManyWithoutJogoNestedInput
    favoritos?: FavoritoUpdateManyWithoutJogoNestedInput
  }

  export type JogoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    imagens?: ImagemJogoUncheckedUpdateManyWithoutJogoNestedInput
    comentarios?: ComentarioUncheckedUpdateManyWithoutJogoNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutJogoNestedInput
  }

  export type JogoCreateManyInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
  }

  export type JogoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
  }

  export type JogoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ImagemJogoCreateInput = {
    id?: string
    urlImagem: string
    jogo: JogoCreateNestedOneWithoutImagensInput
  }

  export type ImagemJogoUncheckedCreateInput = {
    id?: string
    idJogo: string
    urlImagem: string
  }

  export type ImagemJogoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    jogo?: JogoUpdateOneRequiredWithoutImagensNestedInput
  }

  export type ImagemJogoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    idJogo?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
  }

  export type ImagemJogoCreateManyInput = {
    id?: string
    idJogo: string
    urlImagem: string
  }

  export type ImagemJogoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
  }

  export type ImagemJogoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    idJogo?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
  }

  export type ComentarioCreateInput = {
    id?: string
    conteudo: string
    curtidas?: number
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    jogo: JogoCreateNestedOneWithoutComentariosInput
    usuario: UsuarioCreateNestedOneWithoutComentariosInput
  }

  export type ComentarioUncheckedCreateInput = {
    id?: string
    conteudo: string
    curtidas?: number
    idJogo: string
    idUsuario: string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type ComentarioUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    jogo?: JogoUpdateOneRequiredWithoutComentariosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutComentariosNestedInput
  }

  export type ComentarioUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    idJogo?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioCreateManyInput = {
    id?: string
    conteudo: string
    curtidas?: number
    idJogo: string
    idUsuario: string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type ComentarioUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    idJogo?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritoCreateInput = {
    id?: string
    jogo: JogoCreateNestedOneWithoutFavoritosInput
    usuario: UsuarioCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritoUncheckedCreateInput = {
    id?: string
    idJogo: string
    idUsuario: string
  }

  export type FavoritoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    jogo?: JogoUpdateOneRequiredWithoutFavoritosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    idJogo?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoCreateManyInput = {
    id?: string
    idJogo: string
    idUsuario: string
  }

  export type FavoritoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    idJogo?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type MensagemChatCreateInput = {
    id?: string
    conteudo: string
    urlImagem?: string | null
    ehConvidado?: boolean
    nomeConvidado?: string | null
    dataCriacao?: Date | string
    usuario?: UsuarioCreateNestedOneWithoutMensagensChatInput
  }

  export type MensagemChatUncheckedCreateInput = {
    id?: string
    conteudo: string
    urlImagem?: string | null
    ehConvidado?: boolean
    nomeConvidado?: string | null
    idUsuario?: string | null
    dataCriacao?: Date | string
  }

  export type MensagemChatUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    urlImagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehConvidado?: BoolFieldUpdateOperationsInput | boolean
    nomeConvidado?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneWithoutMensagensChatNestedInput
  }

  export type MensagemChatUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    urlImagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehConvidado?: BoolFieldUpdateOperationsInput | boolean
    nomeConvidado?: NullableStringFieldUpdateOperationsInput | string | null
    idUsuario?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensagemChatCreateManyInput = {
    id?: string
    conteudo: string
    urlImagem?: string | null
    ehConvidado?: boolean
    nomeConvidado?: string | null
    idUsuario?: string | null
    dataCriacao?: Date | string
  }

  export type MensagemChatUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    urlImagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehConvidado?: BoolFieldUpdateOperationsInput | boolean
    nomeConvidado?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensagemChatUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    urlImagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehConvidado?: BoolFieldUpdateOperationsInput | boolean
    nomeConvidado?: NullableStringFieldUpdateOperationsInput | string | null
    idUsuario?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ComentarioListRelationFilter = {
    every?: ComentarioWhereInput
    some?: ComentarioWhereInput
    none?: ComentarioWhereInput
  }

  export type FavoritoListRelationFilter = {
    every?: FavoritoWhereInput
    some?: FavoritoWhereInput
    none?: FavoritoWhereInput
  }

  export type MensagemChatListRelationFilter = {
    every?: MensagemChatWhereInput
    some?: MensagemChatWhereInput
    none?: MensagemChatWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ComentarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoritoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MensagemChatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    handle?: SortOrder
    imagem?: SortOrder
    ehAdmin?: SortOrder
    bio?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    handle?: SortOrder
    imagem?: SortOrder
    ehAdmin?: SortOrder
    bio?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    handle?: SortOrder
    imagem?: SortOrder
    ehAdmin?: SortOrder
    bio?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type ImagemJogoListRelationFilter = {
    every?: ImagemJogoWhereInput
    some?: ImagemJogoWhereInput
    none?: ImagemJogoWhereInput
  }

  export type ImagemJogoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JogoCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    urlImagem?: SortOrder
    desenvolvedor?: SortOrder
    versao?: SortOrder
    engine?: SortOrder
    idioma?: SortOrder
    avaliacao?: SortOrder
    tags?: SortOrder
    urlDownload?: SortOrder
    urlDownloadWindows?: SortOrder
    urlDownloadAndroid?: SortOrder
    urlDownloadLinux?: SortOrder
    urlDownloadMac?: SortOrder
    censurado?: SortOrder
    instalacao?: SortOrder
    changelog?: SortOrder
    notasDev?: SortOrder
    dataLancamento?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    osWindows?: SortOrder
    osAndroid?: SortOrder
    osLinux?: SortOrder
    osMac?: SortOrder
  }

  export type JogoAvgOrderByAggregateInput = {
    avaliacao?: SortOrder
  }

  export type JogoMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    urlImagem?: SortOrder
    desenvolvedor?: SortOrder
    versao?: SortOrder
    engine?: SortOrder
    idioma?: SortOrder
    avaliacao?: SortOrder
    tags?: SortOrder
    urlDownload?: SortOrder
    urlDownloadWindows?: SortOrder
    urlDownloadAndroid?: SortOrder
    urlDownloadLinux?: SortOrder
    urlDownloadMac?: SortOrder
    censurado?: SortOrder
    instalacao?: SortOrder
    changelog?: SortOrder
    notasDev?: SortOrder
    dataLancamento?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    osWindows?: SortOrder
    osAndroid?: SortOrder
    osLinux?: SortOrder
    osMac?: SortOrder
  }

  export type JogoMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    urlImagem?: SortOrder
    desenvolvedor?: SortOrder
    versao?: SortOrder
    engine?: SortOrder
    idioma?: SortOrder
    avaliacao?: SortOrder
    tags?: SortOrder
    urlDownload?: SortOrder
    urlDownloadWindows?: SortOrder
    urlDownloadAndroid?: SortOrder
    urlDownloadLinux?: SortOrder
    urlDownloadMac?: SortOrder
    censurado?: SortOrder
    instalacao?: SortOrder
    changelog?: SortOrder
    notasDev?: SortOrder
    dataLancamento?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    osWindows?: SortOrder
    osAndroid?: SortOrder
    osLinux?: SortOrder
    osMac?: SortOrder
  }

  export type JogoSumOrderByAggregateInput = {
    avaliacao?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type JogoRelationFilter = {
    is?: JogoWhereInput
    isNot?: JogoWhereInput
  }

  export type ImagemJogoCountOrderByAggregateInput = {
    id?: SortOrder
    idJogo?: SortOrder
    urlImagem?: SortOrder
  }

  export type ImagemJogoMaxOrderByAggregateInput = {
    id?: SortOrder
    idJogo?: SortOrder
    urlImagem?: SortOrder
  }

  export type ImagemJogoMinOrderByAggregateInput = {
    id?: SortOrder
    idJogo?: SortOrder
    urlImagem?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type ComentarioCountOrderByAggregateInput = {
    id?: SortOrder
    conteudo?: SortOrder
    curtidas?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type ComentarioAvgOrderByAggregateInput = {
    curtidas?: SortOrder
  }

  export type ComentarioMaxOrderByAggregateInput = {
    id?: SortOrder
    conteudo?: SortOrder
    curtidas?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type ComentarioMinOrderByAggregateInput = {
    id?: SortOrder
    conteudo?: SortOrder
    curtidas?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type ComentarioSumOrderByAggregateInput = {
    curtidas?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FavoritoIdJogoIdUsuarioCompoundUniqueInput = {
    idJogo: string
    idUsuario: string
  }

  export type FavoritoCountOrderByAggregateInput = {
    id?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
  }

  export type FavoritoMaxOrderByAggregateInput = {
    id?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
  }

  export type FavoritoMinOrderByAggregateInput = {
    id?: SortOrder
    idJogo?: SortOrder
    idUsuario?: SortOrder
  }

  export type UsuarioNullableRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type MensagemChatCountOrderByAggregateInput = {
    id?: SortOrder
    conteudo?: SortOrder
    urlImagem?: SortOrder
    ehConvidado?: SortOrder
    nomeConvidado?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
  }

  export type MensagemChatMaxOrderByAggregateInput = {
    id?: SortOrder
    conteudo?: SortOrder
    urlImagem?: SortOrder
    ehConvidado?: SortOrder
    nomeConvidado?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
  }

  export type MensagemChatMinOrderByAggregateInput = {
    id?: SortOrder
    conteudo?: SortOrder
    urlImagem?: SortOrder
    ehConvidado?: SortOrder
    nomeConvidado?: SortOrder
    idUsuario?: SortOrder
    dataCriacao?: SortOrder
  }

  export type ComentarioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ComentarioCreateWithoutUsuarioInput, ComentarioUncheckedCreateWithoutUsuarioInput> | ComentarioCreateWithoutUsuarioInput[] | ComentarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutUsuarioInput | ComentarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: ComentarioCreateManyUsuarioInputEnvelope
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
  }

  export type FavoritoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FavoritoCreateWithoutUsuarioInput, FavoritoUncheckedCreateWithoutUsuarioInput> | FavoritoCreateWithoutUsuarioInput[] | FavoritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutUsuarioInput | FavoritoCreateOrConnectWithoutUsuarioInput[]
    createMany?: FavoritoCreateManyUsuarioInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type MensagemChatCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MensagemChatCreateWithoutUsuarioInput, MensagemChatUncheckedCreateWithoutUsuarioInput> | MensagemChatCreateWithoutUsuarioInput[] | MensagemChatUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MensagemChatCreateOrConnectWithoutUsuarioInput | MensagemChatCreateOrConnectWithoutUsuarioInput[]
    createMany?: MensagemChatCreateManyUsuarioInputEnvelope
    connect?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
  }

  export type ComentarioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ComentarioCreateWithoutUsuarioInput, ComentarioUncheckedCreateWithoutUsuarioInput> | ComentarioCreateWithoutUsuarioInput[] | ComentarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutUsuarioInput | ComentarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: ComentarioCreateManyUsuarioInputEnvelope
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
  }

  export type FavoritoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FavoritoCreateWithoutUsuarioInput, FavoritoUncheckedCreateWithoutUsuarioInput> | FavoritoCreateWithoutUsuarioInput[] | FavoritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutUsuarioInput | FavoritoCreateOrConnectWithoutUsuarioInput[]
    createMany?: FavoritoCreateManyUsuarioInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type MensagemChatUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MensagemChatCreateWithoutUsuarioInput, MensagemChatUncheckedCreateWithoutUsuarioInput> | MensagemChatCreateWithoutUsuarioInput[] | MensagemChatUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MensagemChatCreateOrConnectWithoutUsuarioInput | MensagemChatCreateOrConnectWithoutUsuarioInput[]
    createMany?: MensagemChatCreateManyUsuarioInputEnvelope
    connect?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ComentarioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ComentarioCreateWithoutUsuarioInput, ComentarioUncheckedCreateWithoutUsuarioInput> | ComentarioCreateWithoutUsuarioInput[] | ComentarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutUsuarioInput | ComentarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: ComentarioUpsertWithWhereUniqueWithoutUsuarioInput | ComentarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ComentarioCreateManyUsuarioInputEnvelope
    set?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    disconnect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    delete?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    update?: ComentarioUpdateWithWhereUniqueWithoutUsuarioInput | ComentarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ComentarioUpdateManyWithWhereWithoutUsuarioInput | ComentarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ComentarioScalarWhereInput | ComentarioScalarWhereInput[]
  }

  export type FavoritoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FavoritoCreateWithoutUsuarioInput, FavoritoUncheckedCreateWithoutUsuarioInput> | FavoritoCreateWithoutUsuarioInput[] | FavoritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutUsuarioInput | FavoritoCreateOrConnectWithoutUsuarioInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutUsuarioInput | FavoritoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FavoritoCreateManyUsuarioInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutUsuarioInput | FavoritoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutUsuarioInput | FavoritoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type MensagemChatUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MensagemChatCreateWithoutUsuarioInput, MensagemChatUncheckedCreateWithoutUsuarioInput> | MensagemChatCreateWithoutUsuarioInput[] | MensagemChatUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MensagemChatCreateOrConnectWithoutUsuarioInput | MensagemChatCreateOrConnectWithoutUsuarioInput[]
    upsert?: MensagemChatUpsertWithWhereUniqueWithoutUsuarioInput | MensagemChatUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MensagemChatCreateManyUsuarioInputEnvelope
    set?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    disconnect?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    delete?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    connect?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    update?: MensagemChatUpdateWithWhereUniqueWithoutUsuarioInput | MensagemChatUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MensagemChatUpdateManyWithWhereWithoutUsuarioInput | MensagemChatUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MensagemChatScalarWhereInput | MensagemChatScalarWhereInput[]
  }

  export type ComentarioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ComentarioCreateWithoutUsuarioInput, ComentarioUncheckedCreateWithoutUsuarioInput> | ComentarioCreateWithoutUsuarioInput[] | ComentarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutUsuarioInput | ComentarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: ComentarioUpsertWithWhereUniqueWithoutUsuarioInput | ComentarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ComentarioCreateManyUsuarioInputEnvelope
    set?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    disconnect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    delete?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    update?: ComentarioUpdateWithWhereUniqueWithoutUsuarioInput | ComentarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ComentarioUpdateManyWithWhereWithoutUsuarioInput | ComentarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ComentarioScalarWhereInput | ComentarioScalarWhereInput[]
  }

  export type FavoritoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FavoritoCreateWithoutUsuarioInput, FavoritoUncheckedCreateWithoutUsuarioInput> | FavoritoCreateWithoutUsuarioInput[] | FavoritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutUsuarioInput | FavoritoCreateOrConnectWithoutUsuarioInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutUsuarioInput | FavoritoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FavoritoCreateManyUsuarioInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutUsuarioInput | FavoritoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutUsuarioInput | FavoritoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type MensagemChatUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MensagemChatCreateWithoutUsuarioInput, MensagemChatUncheckedCreateWithoutUsuarioInput> | MensagemChatCreateWithoutUsuarioInput[] | MensagemChatUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MensagemChatCreateOrConnectWithoutUsuarioInput | MensagemChatCreateOrConnectWithoutUsuarioInput[]
    upsert?: MensagemChatUpsertWithWhereUniqueWithoutUsuarioInput | MensagemChatUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MensagemChatCreateManyUsuarioInputEnvelope
    set?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    disconnect?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    delete?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    connect?: MensagemChatWhereUniqueInput | MensagemChatWhereUniqueInput[]
    update?: MensagemChatUpdateWithWhereUniqueWithoutUsuarioInput | MensagemChatUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MensagemChatUpdateManyWithWhereWithoutUsuarioInput | MensagemChatUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MensagemChatScalarWhereInput | MensagemChatScalarWhereInput[]
  }

  export type ImagemJogoCreateNestedManyWithoutJogoInput = {
    create?: XOR<ImagemJogoCreateWithoutJogoInput, ImagemJogoUncheckedCreateWithoutJogoInput> | ImagemJogoCreateWithoutJogoInput[] | ImagemJogoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ImagemJogoCreateOrConnectWithoutJogoInput | ImagemJogoCreateOrConnectWithoutJogoInput[]
    createMany?: ImagemJogoCreateManyJogoInputEnvelope
    connect?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
  }

  export type ComentarioCreateNestedManyWithoutJogoInput = {
    create?: XOR<ComentarioCreateWithoutJogoInput, ComentarioUncheckedCreateWithoutJogoInput> | ComentarioCreateWithoutJogoInput[] | ComentarioUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutJogoInput | ComentarioCreateOrConnectWithoutJogoInput[]
    createMany?: ComentarioCreateManyJogoInputEnvelope
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
  }

  export type FavoritoCreateNestedManyWithoutJogoInput = {
    create?: XOR<FavoritoCreateWithoutJogoInput, FavoritoUncheckedCreateWithoutJogoInput> | FavoritoCreateWithoutJogoInput[] | FavoritoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutJogoInput | FavoritoCreateOrConnectWithoutJogoInput[]
    createMany?: FavoritoCreateManyJogoInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type ImagemJogoUncheckedCreateNestedManyWithoutJogoInput = {
    create?: XOR<ImagemJogoCreateWithoutJogoInput, ImagemJogoUncheckedCreateWithoutJogoInput> | ImagemJogoCreateWithoutJogoInput[] | ImagemJogoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ImagemJogoCreateOrConnectWithoutJogoInput | ImagemJogoCreateOrConnectWithoutJogoInput[]
    createMany?: ImagemJogoCreateManyJogoInputEnvelope
    connect?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
  }

  export type ComentarioUncheckedCreateNestedManyWithoutJogoInput = {
    create?: XOR<ComentarioCreateWithoutJogoInput, ComentarioUncheckedCreateWithoutJogoInput> | ComentarioCreateWithoutJogoInput[] | ComentarioUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutJogoInput | ComentarioCreateOrConnectWithoutJogoInput[]
    createMany?: ComentarioCreateManyJogoInputEnvelope
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
  }

  export type FavoritoUncheckedCreateNestedManyWithoutJogoInput = {
    create?: XOR<FavoritoCreateWithoutJogoInput, FavoritoUncheckedCreateWithoutJogoInput> | FavoritoCreateWithoutJogoInput[] | FavoritoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutJogoInput | FavoritoCreateOrConnectWithoutJogoInput[]
    createMany?: FavoritoCreateManyJogoInputEnvelope
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ImagemJogoUpdateManyWithoutJogoNestedInput = {
    create?: XOR<ImagemJogoCreateWithoutJogoInput, ImagemJogoUncheckedCreateWithoutJogoInput> | ImagemJogoCreateWithoutJogoInput[] | ImagemJogoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ImagemJogoCreateOrConnectWithoutJogoInput | ImagemJogoCreateOrConnectWithoutJogoInput[]
    upsert?: ImagemJogoUpsertWithWhereUniqueWithoutJogoInput | ImagemJogoUpsertWithWhereUniqueWithoutJogoInput[]
    createMany?: ImagemJogoCreateManyJogoInputEnvelope
    set?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    disconnect?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    delete?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    connect?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    update?: ImagemJogoUpdateWithWhereUniqueWithoutJogoInput | ImagemJogoUpdateWithWhereUniqueWithoutJogoInput[]
    updateMany?: ImagemJogoUpdateManyWithWhereWithoutJogoInput | ImagemJogoUpdateManyWithWhereWithoutJogoInput[]
    deleteMany?: ImagemJogoScalarWhereInput | ImagemJogoScalarWhereInput[]
  }

  export type ComentarioUpdateManyWithoutJogoNestedInput = {
    create?: XOR<ComentarioCreateWithoutJogoInput, ComentarioUncheckedCreateWithoutJogoInput> | ComentarioCreateWithoutJogoInput[] | ComentarioUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutJogoInput | ComentarioCreateOrConnectWithoutJogoInput[]
    upsert?: ComentarioUpsertWithWhereUniqueWithoutJogoInput | ComentarioUpsertWithWhereUniqueWithoutJogoInput[]
    createMany?: ComentarioCreateManyJogoInputEnvelope
    set?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    disconnect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    delete?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    update?: ComentarioUpdateWithWhereUniqueWithoutJogoInput | ComentarioUpdateWithWhereUniqueWithoutJogoInput[]
    updateMany?: ComentarioUpdateManyWithWhereWithoutJogoInput | ComentarioUpdateManyWithWhereWithoutJogoInput[]
    deleteMany?: ComentarioScalarWhereInput | ComentarioScalarWhereInput[]
  }

  export type FavoritoUpdateManyWithoutJogoNestedInput = {
    create?: XOR<FavoritoCreateWithoutJogoInput, FavoritoUncheckedCreateWithoutJogoInput> | FavoritoCreateWithoutJogoInput[] | FavoritoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutJogoInput | FavoritoCreateOrConnectWithoutJogoInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutJogoInput | FavoritoUpsertWithWhereUniqueWithoutJogoInput[]
    createMany?: FavoritoCreateManyJogoInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutJogoInput | FavoritoUpdateWithWhereUniqueWithoutJogoInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutJogoInput | FavoritoUpdateManyWithWhereWithoutJogoInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type ImagemJogoUncheckedUpdateManyWithoutJogoNestedInput = {
    create?: XOR<ImagemJogoCreateWithoutJogoInput, ImagemJogoUncheckedCreateWithoutJogoInput> | ImagemJogoCreateWithoutJogoInput[] | ImagemJogoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ImagemJogoCreateOrConnectWithoutJogoInput | ImagemJogoCreateOrConnectWithoutJogoInput[]
    upsert?: ImagemJogoUpsertWithWhereUniqueWithoutJogoInput | ImagemJogoUpsertWithWhereUniqueWithoutJogoInput[]
    createMany?: ImagemJogoCreateManyJogoInputEnvelope
    set?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    disconnect?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    delete?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    connect?: ImagemJogoWhereUniqueInput | ImagemJogoWhereUniqueInput[]
    update?: ImagemJogoUpdateWithWhereUniqueWithoutJogoInput | ImagemJogoUpdateWithWhereUniqueWithoutJogoInput[]
    updateMany?: ImagemJogoUpdateManyWithWhereWithoutJogoInput | ImagemJogoUpdateManyWithWhereWithoutJogoInput[]
    deleteMany?: ImagemJogoScalarWhereInput | ImagemJogoScalarWhereInput[]
  }

  export type ComentarioUncheckedUpdateManyWithoutJogoNestedInput = {
    create?: XOR<ComentarioCreateWithoutJogoInput, ComentarioUncheckedCreateWithoutJogoInput> | ComentarioCreateWithoutJogoInput[] | ComentarioUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: ComentarioCreateOrConnectWithoutJogoInput | ComentarioCreateOrConnectWithoutJogoInput[]
    upsert?: ComentarioUpsertWithWhereUniqueWithoutJogoInput | ComentarioUpsertWithWhereUniqueWithoutJogoInput[]
    createMany?: ComentarioCreateManyJogoInputEnvelope
    set?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    disconnect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    delete?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    connect?: ComentarioWhereUniqueInput | ComentarioWhereUniqueInput[]
    update?: ComentarioUpdateWithWhereUniqueWithoutJogoInput | ComentarioUpdateWithWhereUniqueWithoutJogoInput[]
    updateMany?: ComentarioUpdateManyWithWhereWithoutJogoInput | ComentarioUpdateManyWithWhereWithoutJogoInput[]
    deleteMany?: ComentarioScalarWhereInput | ComentarioScalarWhereInput[]
  }

  export type FavoritoUncheckedUpdateManyWithoutJogoNestedInput = {
    create?: XOR<FavoritoCreateWithoutJogoInput, FavoritoUncheckedCreateWithoutJogoInput> | FavoritoCreateWithoutJogoInput[] | FavoritoUncheckedCreateWithoutJogoInput[]
    connectOrCreate?: FavoritoCreateOrConnectWithoutJogoInput | FavoritoCreateOrConnectWithoutJogoInput[]
    upsert?: FavoritoUpsertWithWhereUniqueWithoutJogoInput | FavoritoUpsertWithWhereUniqueWithoutJogoInput[]
    createMany?: FavoritoCreateManyJogoInputEnvelope
    set?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    disconnect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    delete?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    connect?: FavoritoWhereUniqueInput | FavoritoWhereUniqueInput[]
    update?: FavoritoUpdateWithWhereUniqueWithoutJogoInput | FavoritoUpdateWithWhereUniqueWithoutJogoInput[]
    updateMany?: FavoritoUpdateManyWithWhereWithoutJogoInput | FavoritoUpdateManyWithWhereWithoutJogoInput[]
    deleteMany?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
  }

  export type JogoCreateNestedOneWithoutImagensInput = {
    create?: XOR<JogoCreateWithoutImagensInput, JogoUncheckedCreateWithoutImagensInput>
    connectOrCreate?: JogoCreateOrConnectWithoutImagensInput
    connect?: JogoWhereUniqueInput
  }

  export type JogoUpdateOneRequiredWithoutImagensNestedInput = {
    create?: XOR<JogoCreateWithoutImagensInput, JogoUncheckedCreateWithoutImagensInput>
    connectOrCreate?: JogoCreateOrConnectWithoutImagensInput
    upsert?: JogoUpsertWithoutImagensInput
    connect?: JogoWhereUniqueInput
    update?: XOR<XOR<JogoUpdateToOneWithWhereWithoutImagensInput, JogoUpdateWithoutImagensInput>, JogoUncheckedUpdateWithoutImagensInput>
  }

  export type JogoCreateNestedOneWithoutComentariosInput = {
    create?: XOR<JogoCreateWithoutComentariosInput, JogoUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: JogoCreateOrConnectWithoutComentariosInput
    connect?: JogoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutComentariosInput = {
    create?: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutComentariosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type JogoUpdateOneRequiredWithoutComentariosNestedInput = {
    create?: XOR<JogoCreateWithoutComentariosInput, JogoUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: JogoCreateOrConnectWithoutComentariosInput
    upsert?: JogoUpsertWithoutComentariosInput
    connect?: JogoWhereUniqueInput
    update?: XOR<XOR<JogoUpdateToOneWithWhereWithoutComentariosInput, JogoUpdateWithoutComentariosInput>, JogoUncheckedUpdateWithoutComentariosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutComentariosNestedInput = {
    create?: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutComentariosInput
    upsert?: UsuarioUpsertWithoutComentariosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutComentariosInput, UsuarioUpdateWithoutComentariosInput>, UsuarioUncheckedUpdateWithoutComentariosInput>
  }

  export type JogoCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<JogoCreateWithoutFavoritosInput, JogoUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: JogoCreateOrConnectWithoutFavoritosInput
    connect?: JogoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFavoritosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type JogoUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<JogoCreateWithoutFavoritosInput, JogoUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: JogoCreateOrConnectWithoutFavoritosInput
    upsert?: JogoUpsertWithoutFavoritosInput
    connect?: JogoWhereUniqueInput
    update?: XOR<XOR<JogoUpdateToOneWithWhereWithoutFavoritosInput, JogoUpdateWithoutFavoritosInput>, JogoUncheckedUpdateWithoutFavoritosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFavoritosInput
    upsert?: UsuarioUpsertWithoutFavoritosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutFavoritosInput, UsuarioUpdateWithoutFavoritosInput>, UsuarioUncheckedUpdateWithoutFavoritosInput>
  }

  export type UsuarioCreateNestedOneWithoutMensagensChatInput = {
    create?: XOR<UsuarioCreateWithoutMensagensChatInput, UsuarioUncheckedCreateWithoutMensagensChatInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMensagensChatInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneWithoutMensagensChatNestedInput = {
    create?: XOR<UsuarioCreateWithoutMensagensChatInput, UsuarioUncheckedCreateWithoutMensagensChatInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMensagensChatInput
    upsert?: UsuarioUpsertWithoutMensagensChatInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutMensagensChatInput, UsuarioUpdateWithoutMensagensChatInput>, UsuarioUncheckedUpdateWithoutMensagensChatInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type ComentarioCreateWithoutUsuarioInput = {
    id?: string
    conteudo: string
    curtidas?: number
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    jogo: JogoCreateNestedOneWithoutComentariosInput
  }

  export type ComentarioUncheckedCreateWithoutUsuarioInput = {
    id?: string
    conteudo: string
    curtidas?: number
    idJogo: string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type ComentarioCreateOrConnectWithoutUsuarioInput = {
    where: ComentarioWhereUniqueInput
    create: XOR<ComentarioCreateWithoutUsuarioInput, ComentarioUncheckedCreateWithoutUsuarioInput>
  }

  export type ComentarioCreateManyUsuarioInputEnvelope = {
    data: ComentarioCreateManyUsuarioInput | ComentarioCreateManyUsuarioInput[]
  }

  export type FavoritoCreateWithoutUsuarioInput = {
    id?: string
    jogo: JogoCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritoUncheckedCreateWithoutUsuarioInput = {
    id?: string
    idJogo: string
  }

  export type FavoritoCreateOrConnectWithoutUsuarioInput = {
    where: FavoritoWhereUniqueInput
    create: XOR<FavoritoCreateWithoutUsuarioInput, FavoritoUncheckedCreateWithoutUsuarioInput>
  }

  export type FavoritoCreateManyUsuarioInputEnvelope = {
    data: FavoritoCreateManyUsuarioInput | FavoritoCreateManyUsuarioInput[]
  }

  export type MensagemChatCreateWithoutUsuarioInput = {
    id?: string
    conteudo: string
    urlImagem?: string | null
    ehConvidado?: boolean
    nomeConvidado?: string | null
    dataCriacao?: Date | string
  }

  export type MensagemChatUncheckedCreateWithoutUsuarioInput = {
    id?: string
    conteudo: string
    urlImagem?: string | null
    ehConvidado?: boolean
    nomeConvidado?: string | null
    dataCriacao?: Date | string
  }

  export type MensagemChatCreateOrConnectWithoutUsuarioInput = {
    where: MensagemChatWhereUniqueInput
    create: XOR<MensagemChatCreateWithoutUsuarioInput, MensagemChatUncheckedCreateWithoutUsuarioInput>
  }

  export type MensagemChatCreateManyUsuarioInputEnvelope = {
    data: MensagemChatCreateManyUsuarioInput | MensagemChatCreateManyUsuarioInput[]
  }

  export type ComentarioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ComentarioWhereUniqueInput
    update: XOR<ComentarioUpdateWithoutUsuarioInput, ComentarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ComentarioCreateWithoutUsuarioInput, ComentarioUncheckedCreateWithoutUsuarioInput>
  }

  export type ComentarioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ComentarioWhereUniqueInput
    data: XOR<ComentarioUpdateWithoutUsuarioInput, ComentarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type ComentarioUpdateManyWithWhereWithoutUsuarioInput = {
    where: ComentarioScalarWhereInput
    data: XOR<ComentarioUpdateManyMutationInput, ComentarioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ComentarioScalarWhereInput = {
    AND?: ComentarioScalarWhereInput | ComentarioScalarWhereInput[]
    OR?: ComentarioScalarWhereInput[]
    NOT?: ComentarioScalarWhereInput | ComentarioScalarWhereInput[]
    id?: StringFilter<"Comentario"> | string
    conteudo?: StringFilter<"Comentario"> | string
    curtidas?: IntFilter<"Comentario"> | number
    idJogo?: StringFilter<"Comentario"> | string
    idUsuario?: StringFilter<"Comentario"> | string
    dataCriacao?: DateTimeFilter<"Comentario"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Comentario"> | Date | string
  }

  export type FavoritoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: FavoritoWhereUniqueInput
    update: XOR<FavoritoUpdateWithoutUsuarioInput, FavoritoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<FavoritoCreateWithoutUsuarioInput, FavoritoUncheckedCreateWithoutUsuarioInput>
  }

  export type FavoritoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: FavoritoWhereUniqueInput
    data: XOR<FavoritoUpdateWithoutUsuarioInput, FavoritoUncheckedUpdateWithoutUsuarioInput>
  }

  export type FavoritoUpdateManyWithWhereWithoutUsuarioInput = {
    where: FavoritoScalarWhereInput
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type FavoritoScalarWhereInput = {
    AND?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
    OR?: FavoritoScalarWhereInput[]
    NOT?: FavoritoScalarWhereInput | FavoritoScalarWhereInput[]
    id?: StringFilter<"Favorito"> | string
    idJogo?: StringFilter<"Favorito"> | string
    idUsuario?: StringFilter<"Favorito"> | string
  }

  export type MensagemChatUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: MensagemChatWhereUniqueInput
    update: XOR<MensagemChatUpdateWithoutUsuarioInput, MensagemChatUncheckedUpdateWithoutUsuarioInput>
    create: XOR<MensagemChatCreateWithoutUsuarioInput, MensagemChatUncheckedCreateWithoutUsuarioInput>
  }

  export type MensagemChatUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: MensagemChatWhereUniqueInput
    data: XOR<MensagemChatUpdateWithoutUsuarioInput, MensagemChatUncheckedUpdateWithoutUsuarioInput>
  }

  export type MensagemChatUpdateManyWithWhereWithoutUsuarioInput = {
    where: MensagemChatScalarWhereInput
    data: XOR<MensagemChatUpdateManyMutationInput, MensagemChatUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type MensagemChatScalarWhereInput = {
    AND?: MensagemChatScalarWhereInput | MensagemChatScalarWhereInput[]
    OR?: MensagemChatScalarWhereInput[]
    NOT?: MensagemChatScalarWhereInput | MensagemChatScalarWhereInput[]
    id?: StringFilter<"MensagemChat"> | string
    conteudo?: StringFilter<"MensagemChat"> | string
    urlImagem?: StringNullableFilter<"MensagemChat"> | string | null
    ehConvidado?: BoolFilter<"MensagemChat"> | boolean
    nomeConvidado?: StringNullableFilter<"MensagemChat"> | string | null
    idUsuario?: StringNullableFilter<"MensagemChat"> | string | null
    dataCriacao?: DateTimeFilter<"MensagemChat"> | Date | string
  }

  export type ImagemJogoCreateWithoutJogoInput = {
    id?: string
    urlImagem: string
  }

  export type ImagemJogoUncheckedCreateWithoutJogoInput = {
    id?: string
    urlImagem: string
  }

  export type ImagemJogoCreateOrConnectWithoutJogoInput = {
    where: ImagemJogoWhereUniqueInput
    create: XOR<ImagemJogoCreateWithoutJogoInput, ImagemJogoUncheckedCreateWithoutJogoInput>
  }

  export type ImagemJogoCreateManyJogoInputEnvelope = {
    data: ImagemJogoCreateManyJogoInput | ImagemJogoCreateManyJogoInput[]
  }

  export type ComentarioCreateWithoutJogoInput = {
    id?: string
    conteudo: string
    curtidas?: number
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    usuario: UsuarioCreateNestedOneWithoutComentariosInput
  }

  export type ComentarioUncheckedCreateWithoutJogoInput = {
    id?: string
    conteudo: string
    curtidas?: number
    idUsuario: string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type ComentarioCreateOrConnectWithoutJogoInput = {
    where: ComentarioWhereUniqueInput
    create: XOR<ComentarioCreateWithoutJogoInput, ComentarioUncheckedCreateWithoutJogoInput>
  }

  export type ComentarioCreateManyJogoInputEnvelope = {
    data: ComentarioCreateManyJogoInput | ComentarioCreateManyJogoInput[]
  }

  export type FavoritoCreateWithoutJogoInput = {
    id?: string
    usuario: UsuarioCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritoUncheckedCreateWithoutJogoInput = {
    id?: string
    idUsuario: string
  }

  export type FavoritoCreateOrConnectWithoutJogoInput = {
    where: FavoritoWhereUniqueInput
    create: XOR<FavoritoCreateWithoutJogoInput, FavoritoUncheckedCreateWithoutJogoInput>
  }

  export type FavoritoCreateManyJogoInputEnvelope = {
    data: FavoritoCreateManyJogoInput | FavoritoCreateManyJogoInput[]
  }

  export type ImagemJogoUpsertWithWhereUniqueWithoutJogoInput = {
    where: ImagemJogoWhereUniqueInput
    update: XOR<ImagemJogoUpdateWithoutJogoInput, ImagemJogoUncheckedUpdateWithoutJogoInput>
    create: XOR<ImagemJogoCreateWithoutJogoInput, ImagemJogoUncheckedCreateWithoutJogoInput>
  }

  export type ImagemJogoUpdateWithWhereUniqueWithoutJogoInput = {
    where: ImagemJogoWhereUniqueInput
    data: XOR<ImagemJogoUpdateWithoutJogoInput, ImagemJogoUncheckedUpdateWithoutJogoInput>
  }

  export type ImagemJogoUpdateManyWithWhereWithoutJogoInput = {
    where: ImagemJogoScalarWhereInput
    data: XOR<ImagemJogoUpdateManyMutationInput, ImagemJogoUncheckedUpdateManyWithoutJogoInput>
  }

  export type ImagemJogoScalarWhereInput = {
    AND?: ImagemJogoScalarWhereInput | ImagemJogoScalarWhereInput[]
    OR?: ImagemJogoScalarWhereInput[]
    NOT?: ImagemJogoScalarWhereInput | ImagemJogoScalarWhereInput[]
    id?: StringFilter<"ImagemJogo"> | string
    idJogo?: StringFilter<"ImagemJogo"> | string
    urlImagem?: StringFilter<"ImagemJogo"> | string
  }

  export type ComentarioUpsertWithWhereUniqueWithoutJogoInput = {
    where: ComentarioWhereUniqueInput
    update: XOR<ComentarioUpdateWithoutJogoInput, ComentarioUncheckedUpdateWithoutJogoInput>
    create: XOR<ComentarioCreateWithoutJogoInput, ComentarioUncheckedCreateWithoutJogoInput>
  }

  export type ComentarioUpdateWithWhereUniqueWithoutJogoInput = {
    where: ComentarioWhereUniqueInput
    data: XOR<ComentarioUpdateWithoutJogoInput, ComentarioUncheckedUpdateWithoutJogoInput>
  }

  export type ComentarioUpdateManyWithWhereWithoutJogoInput = {
    where: ComentarioScalarWhereInput
    data: XOR<ComentarioUpdateManyMutationInput, ComentarioUncheckedUpdateManyWithoutJogoInput>
  }

  export type FavoritoUpsertWithWhereUniqueWithoutJogoInput = {
    where: FavoritoWhereUniqueInput
    update: XOR<FavoritoUpdateWithoutJogoInput, FavoritoUncheckedUpdateWithoutJogoInput>
    create: XOR<FavoritoCreateWithoutJogoInput, FavoritoUncheckedCreateWithoutJogoInput>
  }

  export type FavoritoUpdateWithWhereUniqueWithoutJogoInput = {
    where: FavoritoWhereUniqueInput
    data: XOR<FavoritoUpdateWithoutJogoInput, FavoritoUncheckedUpdateWithoutJogoInput>
  }

  export type FavoritoUpdateManyWithWhereWithoutJogoInput = {
    where: FavoritoScalarWhereInput
    data: XOR<FavoritoUpdateManyMutationInput, FavoritoUncheckedUpdateManyWithoutJogoInput>
  }

  export type JogoCreateWithoutImagensInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    comentarios?: ComentarioCreateNestedManyWithoutJogoInput
    favoritos?: FavoritoCreateNestedManyWithoutJogoInput
  }

  export type JogoUncheckedCreateWithoutImagensInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    comentarios?: ComentarioUncheckedCreateNestedManyWithoutJogoInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutJogoInput
  }

  export type JogoCreateOrConnectWithoutImagensInput = {
    where: JogoWhereUniqueInput
    create: XOR<JogoCreateWithoutImagensInput, JogoUncheckedCreateWithoutImagensInput>
  }

  export type JogoUpsertWithoutImagensInput = {
    update: XOR<JogoUpdateWithoutImagensInput, JogoUncheckedUpdateWithoutImagensInput>
    create: XOR<JogoCreateWithoutImagensInput, JogoUncheckedCreateWithoutImagensInput>
    where?: JogoWhereInput
  }

  export type JogoUpdateToOneWithWhereWithoutImagensInput = {
    where?: JogoWhereInput
    data: XOR<JogoUpdateWithoutImagensInput, JogoUncheckedUpdateWithoutImagensInput>
  }

  export type JogoUpdateWithoutImagensInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    comentarios?: ComentarioUpdateManyWithoutJogoNestedInput
    favoritos?: FavoritoUpdateManyWithoutJogoNestedInput
  }

  export type JogoUncheckedUpdateWithoutImagensInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    comentarios?: ComentarioUncheckedUpdateManyWithoutJogoNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutJogoNestedInput
  }

  export type JogoCreateWithoutComentariosInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    imagens?: ImagemJogoCreateNestedManyWithoutJogoInput
    favoritos?: FavoritoCreateNestedManyWithoutJogoInput
  }

  export type JogoUncheckedCreateWithoutComentariosInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    imagens?: ImagemJogoUncheckedCreateNestedManyWithoutJogoInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutJogoInput
  }

  export type JogoCreateOrConnectWithoutComentariosInput = {
    where: JogoWhereUniqueInput
    create: XOR<JogoCreateWithoutComentariosInput, JogoUncheckedCreateWithoutComentariosInput>
  }

  export type UsuarioCreateWithoutComentariosInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    favoritos?: FavoritoCreateNestedManyWithoutUsuarioInput
    mensagensChat?: MensagemChatCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutComentariosInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutUsuarioInput
    mensagensChat?: MensagemChatUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutComentariosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
  }

  export type JogoUpsertWithoutComentariosInput = {
    update: XOR<JogoUpdateWithoutComentariosInput, JogoUncheckedUpdateWithoutComentariosInput>
    create: XOR<JogoCreateWithoutComentariosInput, JogoUncheckedCreateWithoutComentariosInput>
    where?: JogoWhereInput
  }

  export type JogoUpdateToOneWithWhereWithoutComentariosInput = {
    where?: JogoWhereInput
    data: XOR<JogoUpdateWithoutComentariosInput, JogoUncheckedUpdateWithoutComentariosInput>
  }

  export type JogoUpdateWithoutComentariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    imagens?: ImagemJogoUpdateManyWithoutJogoNestedInput
    favoritos?: FavoritoUpdateManyWithoutJogoNestedInput
  }

  export type JogoUncheckedUpdateWithoutComentariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    imagens?: ImagemJogoUncheckedUpdateManyWithoutJogoNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutJogoNestedInput
  }

  export type UsuarioUpsertWithoutComentariosInput = {
    update: XOR<UsuarioUpdateWithoutComentariosInput, UsuarioUncheckedUpdateWithoutComentariosInput>
    create: XOR<UsuarioCreateWithoutComentariosInput, UsuarioUncheckedCreateWithoutComentariosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutComentariosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutComentariosInput, UsuarioUncheckedUpdateWithoutComentariosInput>
  }

  export type UsuarioUpdateWithoutComentariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    favoritos?: FavoritoUpdateManyWithoutUsuarioNestedInput
    mensagensChat?: MensagemChatUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutComentariosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    favoritos?: FavoritoUncheckedUpdateManyWithoutUsuarioNestedInput
    mensagensChat?: MensagemChatUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type JogoCreateWithoutFavoritosInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    imagens?: ImagemJogoCreateNestedManyWithoutJogoInput
    comentarios?: ComentarioCreateNestedManyWithoutJogoInput
  }

  export type JogoUncheckedCreateWithoutFavoritosInput = {
    id?: string
    titulo: string
    descricao: string
    urlImagem: string
    desenvolvedor?: string
    versao?: string
    engine?: string
    idioma?: string
    avaliacao?: number
    tags?: string
    urlDownload?: string | null
    urlDownloadWindows?: string | null
    urlDownloadAndroid?: string | null
    urlDownloadLinux?: string | null
    urlDownloadMac?: string | null
    censurado?: boolean
    instalacao?: string
    changelog?: string
    notasDev?: string | null
    dataLancamento?: Date | string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    osWindows?: boolean
    osAndroid?: boolean
    osLinux?: boolean
    osMac?: boolean
    imagens?: ImagemJogoUncheckedCreateNestedManyWithoutJogoInput
    comentarios?: ComentarioUncheckedCreateNestedManyWithoutJogoInput
  }

  export type JogoCreateOrConnectWithoutFavoritosInput = {
    where: JogoWhereUniqueInput
    create: XOR<JogoCreateWithoutFavoritosInput, JogoUncheckedCreateWithoutFavoritosInput>
  }

  export type UsuarioCreateWithoutFavoritosInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    comentarios?: ComentarioCreateNestedManyWithoutUsuarioInput
    mensagensChat?: MensagemChatCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutFavoritosInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    comentarios?: ComentarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensagensChat?: MensagemChatUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutFavoritosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
  }

  export type JogoUpsertWithoutFavoritosInput = {
    update: XOR<JogoUpdateWithoutFavoritosInput, JogoUncheckedUpdateWithoutFavoritosInput>
    create: XOR<JogoCreateWithoutFavoritosInput, JogoUncheckedCreateWithoutFavoritosInput>
    where?: JogoWhereInput
  }

  export type JogoUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: JogoWhereInput
    data: XOR<JogoUpdateWithoutFavoritosInput, JogoUncheckedUpdateWithoutFavoritosInput>
  }

  export type JogoUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    imagens?: ImagemJogoUpdateManyWithoutJogoNestedInput
    comentarios?: ComentarioUpdateManyWithoutJogoNestedInput
  }

  export type JogoUncheckedUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
    desenvolvedor?: StringFieldUpdateOperationsInput | string
    versao?: StringFieldUpdateOperationsInput | string
    engine?: StringFieldUpdateOperationsInput | string
    idioma?: StringFieldUpdateOperationsInput | string
    avaliacao?: FloatFieldUpdateOperationsInput | number
    tags?: StringFieldUpdateOperationsInput | string
    urlDownload?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadWindows?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadAndroid?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadLinux?: NullableStringFieldUpdateOperationsInput | string | null
    urlDownloadMac?: NullableStringFieldUpdateOperationsInput | string | null
    censurado?: BoolFieldUpdateOperationsInput | boolean
    instalacao?: StringFieldUpdateOperationsInput | string
    changelog?: StringFieldUpdateOperationsInput | string
    notasDev?: NullableStringFieldUpdateOperationsInput | string | null
    dataLancamento?: DateTimeFieldUpdateOperationsInput | Date | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    osWindows?: BoolFieldUpdateOperationsInput | boolean
    osAndroid?: BoolFieldUpdateOperationsInput | boolean
    osLinux?: BoolFieldUpdateOperationsInput | boolean
    osMac?: BoolFieldUpdateOperationsInput | boolean
    imagens?: ImagemJogoUncheckedUpdateManyWithoutJogoNestedInput
    comentarios?: ComentarioUncheckedUpdateManyWithoutJogoNestedInput
  }

  export type UsuarioUpsertWithoutFavoritosInput = {
    update: XOR<UsuarioUpdateWithoutFavoritosInput, UsuarioUncheckedUpdateWithoutFavoritosInput>
    create: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutFavoritosInput, UsuarioUncheckedUpdateWithoutFavoritosInput>
  }

  export type UsuarioUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentarioUpdateManyWithoutUsuarioNestedInput
    mensagensChat?: MensagemChatUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutFavoritosInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensagensChat?: MensagemChatUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateWithoutMensagensChatInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    comentarios?: ComentarioCreateNestedManyWithoutUsuarioInput
    favoritos?: FavoritoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutMensagensChatInput = {
    id?: string
    nome?: string | null
    handle?: string | null
    imagem?: string | null
    ehAdmin?: boolean
    bio?: string | null
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    comentarios?: ComentarioUncheckedCreateNestedManyWithoutUsuarioInput
    favoritos?: FavoritoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutMensagensChatInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutMensagensChatInput, UsuarioUncheckedCreateWithoutMensagensChatInput>
  }

  export type UsuarioUpsertWithoutMensagensChatInput = {
    update: XOR<UsuarioUpdateWithoutMensagensChatInput, UsuarioUncheckedUpdateWithoutMensagensChatInput>
    create: XOR<UsuarioCreateWithoutMensagensChatInput, UsuarioUncheckedCreateWithoutMensagensChatInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutMensagensChatInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutMensagensChatInput, UsuarioUncheckedUpdateWithoutMensagensChatInput>
  }

  export type UsuarioUpdateWithoutMensagensChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentarioUpdateManyWithoutUsuarioNestedInput
    favoritos?: FavoritoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutMensagensChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    handle?: NullableStringFieldUpdateOperationsInput | string | null
    imagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehAdmin?: BoolFieldUpdateOperationsInput | boolean
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentarioUncheckedUpdateManyWithoutUsuarioNestedInput
    favoritos?: FavoritoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ComentarioCreateManyUsuarioInput = {
    id?: string
    conteudo: string
    curtidas?: number
    idJogo: string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type FavoritoCreateManyUsuarioInput = {
    id?: string
    idJogo: string
  }

  export type MensagemChatCreateManyUsuarioInput = {
    id?: string
    conteudo: string
    urlImagem?: string | null
    ehConvidado?: boolean
    nomeConvidado?: string | null
    dataCriacao?: Date | string
  }

  export type ComentarioUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    jogo?: JogoUpdateOneRequiredWithoutComentariosNestedInput
  }

  export type ComentarioUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    idJogo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    idJogo?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritoUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    jogo?: JogoUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritoUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    idJogo?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    idJogo?: StringFieldUpdateOperationsInput | string
  }

  export type MensagemChatUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    urlImagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehConvidado?: BoolFieldUpdateOperationsInput | boolean
    nomeConvidado?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensagemChatUncheckedUpdateWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    urlImagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehConvidado?: BoolFieldUpdateOperationsInput | boolean
    nomeConvidado?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensagemChatUncheckedUpdateManyWithoutUsuarioInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    urlImagem?: NullableStringFieldUpdateOperationsInput | string | null
    ehConvidado?: BoolFieldUpdateOperationsInput | boolean
    nomeConvidado?: NullableStringFieldUpdateOperationsInput | string | null
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ImagemJogoCreateManyJogoInput = {
    id?: string
    urlImagem: string
  }

  export type ComentarioCreateManyJogoInput = {
    id?: string
    conteudo: string
    curtidas?: number
    idUsuario: string
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type FavoritoCreateManyJogoInput = {
    id?: string
    idUsuario: string
  }

  export type ImagemJogoUpdateWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
  }

  export type ImagemJogoUncheckedUpdateWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
  }

  export type ImagemJogoUncheckedUpdateManyWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    urlImagem?: StringFieldUpdateOperationsInput | string
  }

  export type ComentarioUpdateWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutComentariosNestedInput
  }

  export type ComentarioUncheckedUpdateWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioUncheckedUpdateManyWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    conteudo?: StringFieldUpdateOperationsInput | string
    curtidas?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritoUpdateWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    usuario?: UsuarioUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritoUncheckedUpdateWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type FavoritoUncheckedUpdateManyWithoutJogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JogoCountOutputTypeDefaultArgs instead
     */
    export type JogoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JogoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JogoDefaultArgs instead
     */
    export type JogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JogoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ImagemJogoDefaultArgs instead
     */
    export type ImagemJogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ImagemJogoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ComentarioDefaultArgs instead
     */
    export type ComentarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ComentarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FavoritoDefaultArgs instead
     */
    export type FavoritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FavoritoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MensagemChatDefaultArgs instead
     */
    export type MensagemChatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MensagemChatDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}